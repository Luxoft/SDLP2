<?xml version="1.0" standalone="no"?>
<?xml-stylesheet type="text/xml" href="protocol2html.xsl"?>

<interface name="Ford Sync RAPI" version="2.0O" date="2012-11-02">

  <enum name="Result" internal_scope="base">
    <element name="SUCCESS">
      <description>The request succeeded</description>
    </element>
    <element name="INVALID_DATA">
      <description>The data sent is invalid. For example</description>
      <description>Invalid Json syntax</description>
      <description>Parameters out of bounds (number or enum range)</description>
      <description>Mandatory parameters not provided</description>
      <description>Parameter provided with wrong type</description>
      <description>Invalid characters</description>
      <description>Empty string</description>
    </element>
    <element name="UNSUPPORTED_REQUEST">
      <description>The request is not supported by Sync</description>
    </element>
    <element name="OUT_OF_MEMORY">
      <description>The system could not process the request because the necessary memory couldn't be allocated</description>
    </element>
    <element name="TOO_MANY_PENDING_REQUESTS">
      <description>There are too many requests pending (means, that the response has not been delivered, yet).</description>
      <designdescription>There may be a maximum of 1000 pending requests at a time.</designdescription>
    </element>
    <element name="INVALID_ID">
      <description>One of the provided IDs is not valid. For example</description>
      <description>This applies to CorrelationID, SubscriptionID [@TODO if SubscriptionID is used], CommandID, MenuID, [@TODO: missed one?]</description>
    </element>
    <element name="DUPLICATE_NAME">
      <description>There was a conflict with an registered name (application or menu item) or vr command</description>
    </element>
    <element name="TOO_MANY_APPLICATIONS">
      <description>There are already too many registered applications</description>
    </element>
    <element name="APPLICATION_REGISTERED_ALREADY">
      <description>RegisterApplication has been called again, after a RegisterApplication was successful before.</description>
    </element>
    <element name="UNSUPPORTED_VERSION">
      <description>Sync doesn't support the protocol that is requested by the mobile application</description>
    </element>
    <element name="WRONG_LANGUAGE">
      <description>The requested language is currently not supported.</description>
      <description>Might be because of a mismatch of the currently active language on Sync and the requested language</description>
    </element>
    <element name="APPLICATION_NOT_REGISTERED">
      <description>An command can not be executed because no application has been registered with RegisterApplication.</description>
    </element>
    <element name="IN_USE">
      <description>The data may not be changed, because it is currently in use.</description>
      <description>For example when trying to delete a command set that is currently involved in an interaction.</description>
    </element>
    <element name="SUBSCRIBED_ALREADY">
      <description>The item to subscribe to is already subscribed to.</description>
    </element>
    <element name="VEHICLE_DATA_NOT_ALLOWED">
      <description>The user has turned off access to vehicle data, and it is globally unavailable to mobile applications.</description>
    </element>
    <element name="VEHICLE_DATA_NOT_AVAILABLE">
      <description>The requested vehicle data is not available on this vehicle or is not published.</description>
    </element>
    <element name="REJECTED">
      <description>The requested command was rejected, e.g. because mobile app is in background and cannot perform any HMI commands.</description>
      <description>Or an HMI command (e.g. Speak) is rejected because a higher priority HMI command (e.g. Alert) is playing.</description>
    </element>
    <element name="ABORTED">
      <description>A command was aborted, for example due to user interaction (e.g. user pressed button).</description>
      <description>Or an HMI command (e.g. Speak) is aborted because a higher priority HMI command (e.g. Alert) was requested.</description>
    </element>
    <element name="IGNORED">
      <description>A command was ignored, because the intended result is already in effect.</description>
      <description>For example, SetMediaClockTimer was used to pause the media clock although the clock is paused already.</description>
      <description>NOTE: potentially replaces SUBSCRIBED_ALREADY</description>
    </element>
    <element name="UNSUPPORTED_BUTTON">
      <description>A button that was requested for subscription is not supported under the current system.</description>
      <description>NOTE: could become a more generic UNSUPPORTED_RESOURCE by merging with VEHIVLE_DATA_NOT_AVAILABLE.</description>
    </element>
    <element name="FILE_NOT_FOUND">
      <description>A specified file could not be found on Sync.</description>
    </element>
    <element name="GENERIC_ERROR">
      <description>Provided data is valid but something went wrong in the lower layers.</description>
    </element>
    <element name="DISALLOWED">
      <description>RPC is not authorized in local policy table.</description>
    </element>
    <element name="USER_DISALLOWED">
      <description>RPC is included in a functional group explicitly blocked by the user.</description>
    </element>
    <element name="TIMED_OUT">
      <description>Overlay reached the maximum timeout and closed.</description>
    </element>
    <element name="CANCEL_ROUTE">
      <description>User selected to Cancel Route.</description>
    </element>
    <element name="CLOSED">
      <description>User chose a Close command for the overlay.</description>
    </element>
    <element name="ENCRYPTED">
      <description>The data is being returned through an OnEncodedSYNCPData notification.</description>
      <description>The data is intended to be passed by the proxy to the designated server URL.</description>
    </element>
    <element name="WARNINGS">
      <description>The RPC (e.g. SubscribeVehicleData) executed successfully but one or more items have a warning or failure.</description>
    </element>
  </enum>

  <enum name="ButtonPressMode">
    <element name="LONG">
      <description>A button was released, after it was pressed for a long time</description>
      <description>Actual timing is defined by Sync and may vary</description>
    </element>
    <element name="SHORT">
      <description>A button was released, after it was pressed for a short time</description>
      <description>Actual timing is defined by Sync and may vary</description>
    </element>
  </enum>

  <enum name="ButtonEventMode">
    <element name="BUTTONUP">
      <description>A button has been released up</description>
    </element>
    <element name="BUTTONDOWN">
      <description>A button has been pressed down</description>
    </element>
  </enum>

  <enum name="Language">
     <element name="EN-US" internal_name="EN_US">
      <description>US English</description>
    </element>
    <element name="ES-MX" internal_name="ES_MX">
      <description>Mexican Spanish</description>
    </element>
    <element name="FR-CA" internal_name="FR_CA">
      <description>Canadian French</description>
    </element>
    <element name="DE-EU" internal_name="DE_EU">
      <description>EU German</description>
    </element>
     <element name="ES-EU" internal_name="ES_EU">
      <description>EU Spanish</description>
    </element>
    <element name="EN-EU" internal_name="EN_EU">
      <description>UK English</description>
    </element>
     <element name="RU-RU" internal_name="RU_RU">
      <description>Russian</description>
    </element>
     <element name="TR-TR" internal_name="TR_TR">
      <description>Turkish</description>
    </element>
     <element name="PL-EU" internal_name="PL_EU">
      <description>EU Polish</description>
    </element>
     <element name="FR-EU" internal_name="FR_EU">
      <description>French</description>
    </element>
     <element name="IT-EU" internal_name="IT_EU">
      <description>Italian</description>
    </element>
     <element name="SV-EU" internal_name="SV_EU">
      <description>Swedish</description>
    </element>
     <element name="PT-EU" internal_name="PT_EU">
      <description>Portuguese</description>
    </element>
     <element name="NL-EU" internal_name="NL_EU">
      <description>Dutch (Standard)</description>
    </element>
     <element name="EN-AU" internal_name="EN_AU">
      <description>Australian English</description>
    </element>
     <element name="ZH-CN" internal_name="ZH_CN">
      <description>Chinese (Mandarin)</description>
    </element>
     <element name="ZH-TW" internal_name="ZH_TW">
      <description>Taiwanese (Mandarin)</description>
    </element>
     <element name="JA-JP" internal_name="JA_JP">
      <description>Japanese</description>
    </element>
     <element name="AR" internal_name="AR">
      <description>Arabic</description>
    </element>
     <element name="KO-KR" internal_name="KO_KR">
      <description>Korean</description>
    </element>
</enum>

  <enum name="UpdateMode">
    <description>Describes how the media clock timer should behave on the platform</description>
    <element name="COUNTUP" />
    <description>Starts the media clock timer counting upwards, as in time elapsed.</description>
    <element name="COUNTDOWN" />
    <description>Starts the media clock timer counting downwards, as in time remaining.</description>
    <element name="PAUSE" />
    <description>Pauses the media clock timer</description>
    <element name="RESUME" />
    <description>Resume the media clock timer</description>
    <element name="CLEAR" />
    <description>Clears the media clock timer (previously done through Show->mediaClock)</description>
  </enum>

  <enum name="TimerMode">
    <element name="UP" />
    <description>Causes the media clock timer to update from 0:00 to a specified time</description>
    <element name="DOWN" />
    <description>Causes the media clock timer to update from a specified time to 0:00</description>
    <element name="NONE" />
    <description>Indicates to not use the media clock timer</description>
  </enum>

  <enum name="InteractionMode">
    <description>For application-requested interactions, this mode indicates the method in which the user is notified and uses the interaction.</description>
    <element name="MANUAL_ONLY" />
    <description>This mode causes the interaction to only occur on the display, meaning the choices are provided only via the display.</description>
    <description>Selections are made with the OK and Seek Right and Left, Tune Up and Down buttons.</description>
    <element name="VR_ONLY" />
    <description>This mode causes the interaction to only occur using V4.</description>
    <description>Selections are made by saying the command.</description>
    <element name="BOTH" />
    <description>This mode causes both a VR and display selection option for an interaction.</description>
    <description>Selections can be made either from the menu display or by speaking the command.</description>
  </enum>

  <enum name="HMILevel">
    <description>Enumeraction that describes current levels of HMI.</description>
    <element name="FULL" internal_name="HMI_FULL" />
    <element name="LIMITED" internal_name="HMI_LIMITED" />
    <element name="BACKGROUND" internal_name="HMI_BACKGROUND" />
    <element name="NONE" internal_name="HMI_NONE" />
  </enum>

  <enum name="AudioStreamingState">
    <description>Enumeraction that describes possible states of audio streaming.</description>
    <element name="AUDIBLE" />
    <element name="ATTENUATED" />
    <element name="NOT_AUDIBLE" />
  </enum>

  <enum name="SystemAction">
    <description>Enumeration that describes system actions that can be triggered.</description>
    <element name="DEFAULT_ACTION">
      <description>Default action occurs.  Standard behavior (e.g. SoftButton clears overlay).</description>
    </element>
    <element name="STEAL_FOCUS">
      <description>App is brought into HMI_FULL.</description>
    </element>
    <element name="KEEP_CONTEXT">
      <description>Current system context is maintained.  An overlay is persisted even though a SoftButton has been pressed and the notification sent.</description>
    </element>
  </enum>

  <enum name="SystemContext">
    <description>Enumeration that describes possible contexts an app's HMI might be in.</description>
    <description>Communicated to whichever app is in HMI FULL, except Alert.</description>
    <element name="MAIN" internal_name="SYSCTXT_MAIN">
      <description>The app's persistent display (whether media/non-media/navigation) is fully visible onscreen.</description>
    </element>
    <element name="VRSESSION" internal_name="SYSCTXT_VRSESSION">
      <description>The system is currently in a VR session (with whatever dedicated VR screen being overlaid onscreen).</description>
    </element>
    <element name="MENU" internal_name="SYSCTXT_MENU">
      <description>The system is currently displaying a system or in-App menu onscreen.</description>
    </element>
    <element name="HMI_OBSCURED" internal_name="SYSCTXT_HMI_OBSCURED">
      <description>The app's display HMI is currently being obscured by either a system or other app's overlay.</description>
    </element>
    <element name="ALERT" internal_name="SYSCTXT_ALERT">
      <description>Broadcast only to whichever app has an alert currently being displayed.</description>
    </element>
  </enum>

  <enum name="SoftButtonType">
    <description>Contains information about the SoftButton capabilities.</description>
    <element name="TEXT" internal_name="SBT_TEXT"/>
    <element name="IMAGE" internal_name="SBT_IMAGE"/>
    <element name="BOTH" internal_name="SBT_BOTH"/>
  </enum>

  <enum name="AppInterfaceUnregisteredReason">
    <description>Error code, which comes from sync side.</description>
    <element name="USER_EXIT" />
    <element name="IGNITION_OFF" />
    <element name="BLUETOOTH_OFF" />
    <element name="USB_DISCONNECTED" />
    <element name="REQUEST_WHILE_IN_NONE_HMI_LEVEL" />
    <element name="TOO_MANY_REQUESTS" />
    <element name="DRIVER_DISTRACTION_VIOLATION" />
    <element name="LANGUAGE_CHANGE" />
    <element name="MASTER_RESET" />
    <element name="FACTORY_DEFAULTS" />
    <element name="APP_UNAUTHORIZED" />
  </enum>

  <enum name="TriggerSource">
    <description>Indicates the source from where the command was triggered.</description>
    <element name="MENU" internal_name="TS_MENU" />
    <element name="VR" internal_name="TS_VR" />
  </enum>

  <enum name="HmiZoneCapabilities">
    <description>Contains information about the HMI zone capabilities.</description>
    <description>For future use.</description>
    <element name="FRONT" />
    <element name="BACK" />
  </enum>

  <enum name="SpeechCapabilities">
    <description>Contains information about the TTS capabilities.</description>
    <element name="TEXT" internal_name="SC_TEXT"/>
    <element name="SAPI_PHONEMES" />
    <element name="LHPLUS_PHONEMES" />
    <element name="PRE_RECORDED" />
    <element name="SILENCE" />
  </enum>

  <enum name="VrCapabilities">
    <description>Contains information about the VR capabilities.</description>
    <element name="TEXT" internal_name="VR_TEXT"/>
  </enum>

  <enum name="SamplingRate">
    <description>Describes different sampling options for PerformAudioPassThru.</description>
    <element name="8KHZ"  internal_name="SamplingRate_8KHZ"/>
    <element name="16KHZ"  internal_name="SamplingRate_16KHZ"/>
    <element name="22KHZ"  internal_name="SamplingRate_22KHZ"/>
    <element name="44KHZ"  internal_name="SamplingRate_44KHZ"/>
  </enum>

  <enum name="AudioCaptureQuality">
    <description>Describes different quality options for PerformAudioPassThru.</description>
    <element name="8_BIT" internal_name="AudioCaptureQuality_8_BIT"/>
    <element name="16_BIT" internal_name="AudioCaptureQuality_16_BIT"/>
  </enum>

  <enum name="AudioType">
    <description>Describes different audio type options for PerformAudioPassThru.</description>
    <element name="PCM" />
<!-- TODO: remove?
    <element name="MP3" />
    <element name="WAV" />
-->
  </enum>

  <enum name="VehicleDataType">
    <description>Defines the data types that can be published and subscribed to.</description>
    <element name="VEHICLEDATA_GPS">
    	<description>Notifies GPSData</description>
    	<description>may be subscribed</description>
    </element>
    <element name="VEHICLEDATA_SPEED" />
    <element name="VEHICLEDATA_FUELLEVEL" />
    <element name="VEHICLEDATA_FUELECONOMY" />
    <element name="VEHICLEDATA_ENGINERPM" />
    <element name="VEHICLEDATA_BATTVOLTS" />
    <element name="VEHICLEDATA_RAINSENSOR">
      <issue creator="rs">Cansignals not identified yet</issue>
    </element>
    <element name="VEHICLEDATA_ODOMETER" />
    <element name="VEHICLEDATA_VIN" />
    <element name="VEHICLEDATA_EXTERNTEMP" />
    <element name="VEHICLEDATA_PRNDLSTATUS" />
    <element name="VEHICLEDATA_TIREPRESSURE" />
    <element name="VEHICLEDATA_BATTERYPACKVOLTAGE">
    	<description>Battery pack voltage of hybrid and electrical vehicles</description>
    </element>
    <element name="VEHICLEDATA_BATTERYCURRENT">
    	<description>Battery current of hybrid and electrical vehicles</description>
    </element>
    <element name="VEHICLEDATA_BATTERYTEMPERATURE">
    	<description>Battery temperature of hybrid and electrical vehicles</description>
    </element>
    <element name="VEHICLEDATA_SATESN">
    	<description>Satellite radio serial number (ESN)</description>
    </element>

  </enum>

  <enum name="ButtonName">
    <description>Defines the hard (physical) and soft (touchscreen) buttons available from SYNC</description>
    <element name="OK" />
    <element name="SEEKLEFT" />
    <element name="SEEKRIGHT" />
    <element name="TUNEUP" />
    <element name="TUNEDOWN" />
    <element name="PRESET_0" />
    <element name="PRESET_1" />
    <element name="PRESET_2" />
    <element name="PRESET_3" />
    <element name="PRESET_4" />
    <element name="PRESET_5" />
    <element name="PRESET_6" />
    <element name="PRESET_7" />
    <element name="PRESET_8" />
    <element name="PRESET_9" />
    <element name="CUSTOM_BUTTON" />
  </enum>

  <enum name="MediaClockFormat">
    <element name="CLOCK1">
      <description>minutesFieldWidth = 2;minutesFieldMax = 19;secondsFieldWidth = 2;secondsFieldMax = 99;maxHours = 19;maxMinutes = 59;maxSeconds = 59;</description>
      <description>used for Type II and CID headunits</description>
    </element>
    <element name="CLOCK2">
      <description>minutesFieldWidth = 3;minutesFieldMax = 199;secondsFieldWidth = 2;secondsFieldMax = 99;maxHours = 59;maxMinutes = 59;maxSeconds = 59;</description>
	  <description>used for Type V headunit</description>
    </element>
    <element name="CLOCKTEXT1">
      <description>5 characters possible</description>
      <description>Format:      1|sp   c   :|sp   c   c</description>
      <description>1|sp : digit "1" or space</description>
      <description>c    : character out of following character set: sp|0-9|[letters, see TypeII column in XLS. See [@TODO: create file ref]]</description>
      <description>:|sp : colon or space</description>
	  <description>used for Type II headunit</description>
    </element>
    <element name="CLOCKTEXT2">
      <description>5 chars possible</description>
      <description>Format:      1|sp   c   :|sp   c   c</description>
      <description>1|sp : digit "1" or space</description>
      <description>c    : character out of following character set: sp|0-9|[letters, see CID column in XLS. See [@TODO: create file ref]]</description>
      <description>:|sp : colon or space</description>
	  <description>used for CID headunit</description>
	  <description>NOTE: difference between CLOCKTEXT1 and CLOCKTEXT2 is the supported character set</description>
    </element>
    <element name="CLOCKTEXT3">
      <description>6 chars possible</description>
      <description>Format:      1|sp   c   c   :|sp   c   c</description>
      <description>1|sp : digit "1" or space</description>
      <description>c    : character out of following character set: sp|0-9|[letters, see Type 5 column in XLS]. See [@TODO: create file ref]</description>
      <description>:|sp : colon or space</description>
	  <description>used for Type V headunit</description>
    </element>
	<issue creator="mf">First complete values draft. Review needed.</issue>
  </enum>

  <enum name="DisplayType">
    <description>See DAES for further infos regarding the displays</description>
    <element name="CID"/>
    <element name="TYPE2" />
    <element name="TYPE5" />
    <element name="NGN" />
    <element name="GEN2_8_DMA" />
    <element name="GEN2_6_DMA" />
    <element name="MFD3" />
    <element name="MFD4" />
    <element name="MFD5" />
  </enum>

  <enum name="TextFieldName">
    <element name="mainField1">
      <description>The first line of first set of main fields of the persistent display</description>
      <description>Applies to "Show"</description>
    </element>

    <element name="mainField2">
      <description>The second line of first set of main fields of the persistent display</description>
      <description>Applies to "Show"</description>
    </element>

    <element name="mainField3">
      <description>The first line of second set of main fields of persistent display</description>
      <description>Applies to "Show"</description>
    </element>

    <element name="mainField4">
      <description>The second line of second set of main fields of the persistent display</description>
      <description>Applies to "Show"</description>
    </element>

    <element name="statusBar">
      <description>The status bar on Nav</description>
      <description>Applies to "Show"</description>
    </element>

    <element name="mediaClock">
      <description>Text value for MediaClock field.</description>
      <description>Applies to "Show"</description>
    </element>

    <element name="mediaTrack">
      <description>The track field of NGN type ACMs.</description>
      <description>This field is only available for media applications.</description>
      <description>Applies to "Show"</description>
    </element>

    <element name="alertText1">
      <description>The first line of the alert text field</description>
      <description>Applies to "Alert"</description>
    </element>

    <element name="alertText2">
      <description>The second line of the alert text field</description>
      <description>Applies to "Alert"</description>
    </element>

    <element name="alertText3">
      <description>The third line of the alert text field</description>
      <description>Applies to "Alert"</description>
    </element>

    <element name="scrollableMessageBody">
      <description> Long form body of text that can include newlines and tabs.</description>
      <description>Applies to "ScrollableMessage"</description>
    </element>

    <element name="initialInteractionText">
      <description> First line suggestion for a user response (in the case of VR enabled interaction</description>
    </element>

    <element name="navigationText1">
      <description> First line of navigation text</description>
    </element>

    <element name="navigationText2">
      <description> Second line of navigation text</description>
    </element>

    <element name="ETA">
      <description> Estimated Time of Arrival time for navigation</description>
    </element>

    <element name="totalDistance">
      <description> Total distance to destination for navigation</description>
    </element>

    <element name="audioPassThruDisplayText1">
      <description> First line of text for audio pass thru</description>
    </element>

    <element name="audioPassThruDisplayText2">
      <description> Second line of text for audio pass thru</description>
    </element>

    <element name="sliderHeader">
      <description> Header text for slider</description>
    </element>

    <element name="sliderFooter">
      <description> Footer text for slider</description>
    </element>

  </enum>

  <enum name="CharacterSet">
    <description>The list of potential character sets</description>
    <element name="TYPE2SET">
      <description>See [@TODO: create file ref]</description>
    </element>
    <element name="TYPE5SET">
      <description>See [@TODO: create file ref]</description>
    </element>
    <element name="CID1SET">
      <description>See [@TODO: create file ref]</description>
    </element>
    <element name="CID2SET">
      <description>See [@TODO: create file ref]</description>
    </element>
	<issue creator="rs">Real sets have not been defined yet?</issue>
  </enum>

  <enum name="TextAlignment">
    <description>The list of possible alignments, left, right, or centered</description>
    <element name="LEFT_ALIGNED" />
    <element name="RIGHT_ALIGNED" />
    <element name="CENTERED" />
  </enum>

  <enum name="TBTState">
    <description>Enumeration that describes possible states of turn-by-turn client or AppLink app.</description>
    <element name="ROUTE_UPDATE_REQUEST" />
    <element name="ROUTE_ACCEPTED" />
    <element name="ROUTE_REFUSED" />
    <element name="ROUTE_CANCELLED" />
    <element name="ETA_REQUEST" />
    <element name="NEXT_TURN_REQUEST" />
    <element name="ROUTE_STATUS_REQUEST" />
    <element name="ROUTE_SUMMARY_REQUEST" />
    <element name="TRIP_STATUS_REQUEST" />
    <element name="ROUTE_UPDATE_REQUEST_TIMEOUT" />
  </enum>

  <enum name="DriverDistractionState">
    <description>Enumeration that describes possible states of driver distraction.</description>
    	<element name="DD_ON" />
	<element name="DD_OFF" />
  </enum>

<!-- TODO: REMOVE
  <enum name="DataType">
    <description>Contains information about the type of data.</description>
    <element name="HEX" />
    <element name="BINARY" />
  </enum>
-->

  <enum name="ImageType">
    <description>Contains information about the type of image.</description>
    <element name="STATIC" />
    <element name="DYNAMIC" />
  </enum>

 <struct name="Image">
    <param name="value" maxlength="65535" type="String">
      <description>Either the static hex icon value or the binary image file name identifier (sent by PutFile).</description>
    </param>
    <param name="imageType" type="ImageType">
      <description>Describes, whether it is a static or dynamic image.</description>
    </param>
 </struct>

 <struct name="SoftButton">
    <param name="type" type="SoftButtonType">
      <description>Describes, whether it is text, highlighted text, icon, or dynamic image. See softButtonType</description>
    </param>
    <param name="text" maxlength="500" type="String" mandatory="false">
      <description>Optional text to display (if defined as TEXT or BOTH)</description>
    </param>
    <param name="image" type="Image" mandatory="false">
      <description>Optional image struct for SoftButton (if defined as IMAGE or BOTH)</description>
    </param>
    <param name="isHighlighted" type="Boolean">
    	<description>True, if highlighted</description>
    	<description>False, if not highlighted</description>
    </param>
    <param name="softButtonID" type="Integer" minvalue="0" maxvalue="65536">
      <description>Value which is returned via OnButtonPress / OnButtonEvent</description>
    </param>
    <param name="systemAction" type="SystemAction">
      <description>Parameter indicating whether selecting a SoftButton shall call a specific system action.  This is intended to allow Notifications to bring the callee into full / focus; or in the case of persistent overlays, the overlay can persist when a SoftButton is pressed.</description>
    </param>
 </struct>

  <struct name="Choice">
    <description>A choice is an option given to the user, which can be selected either by menu, or through voice recognition system.</description>
    <param name="choiceID" type="Integer" minvalue="0" maxvalue="65535" />
    <param name="menuName" type="String" maxlength="500" />
    <param name="vrCommands" type="String" minsize="1" maxsize="100" maxlength="99" array="true" />
    <param name="image" type="Image"/>
  </struct>

  <struct name="VrHelpItem">
    <param name="text" maxlength="500" type="String">
      <description>Text to display for VR Help item</description>
    </param>
    <param name="image" type="Image">
      <description>Image struct for VR Help item</description>
    </param>
    <param name="position" type="Integer" minvalue="1" maxvalue="8">
      <description>Position to display item in VR Help list</description>

    </param>
  </struct>

  <struct name="SyncMsgVersion">
    <description>Specifies the version number of the SYNC V4 protocol, that is supported by the mobile application</description>

    <param name="majorVersion" type="Integer" minvalue="1" maxvalue="10">
      <description>The major version indicates versions that is not-compatible to previous versions.</description>
    </param>
    <param name="minorVersion" type="Integer" minvalue="0" maxvalue="1000">
      <description>The minor version indicates a change to a previous version that should still allow to be run on an older version (with limited functionality)</description>
    </param>
  </struct>

  <enum name="GlobalProperty">
    <description>The different global properties.</description>
    <element name="HELPPROMPT">
    	<description>The property helpPrompt of setGlobalProperties</description>
    </element>
    <element name="TIMEOUTPROMPT">
    	<description>The property timeoutPrompt of setGlobalProperties</description>
    </element>
    <element name="VRHELPTITLE">
    	<description>The property vrHelpTitle of setGlobalProperties</description>
    </element>
    <element name="VRHELPITEMS">
    	<description>The property array of vrHelp of setGlobalProperties</description>
    </element>
  </enum>

  <enum name="CompassDirection">
    <description>The list of potential compass directions</description>
    <element name="NORTH">
    </element>
    <element name="NORTHWEST">
    </element>
    <element name="WEST">
    </element>
    <element name="SOUTHWEST">
    </element>
    <element name="SOUTH">
    </element>
    <element name="SOUTHEAST">
    </element>
    <element name="EAST">
    </element>
    <element name="NORTHEAST">
    </element>
  </enum>

  <enum name="Dimension">
    <description>The supported dimensions of the GPS</description>
    <element name="NO_FIX">
    	<description>No GPS at all</description>
    </element>
    <element name="2D" internal_name="Dimension_2D">
    	<description>Longitude and lattitude</description>
    </element>
    <element name="3D" internal_name="Dimension_3D">
    	<description>Longitude and lattitude and altitude</description>
    </element>
  </enum>

  <enum name="PRNDL">
    <description>The selected gear.</description>
    <element name="PARK">
    	<description>Parking</description>
    </element>
    <element name="REVERSE">
    	<description>Reverse gear</description>
    </element>
    <element name="NEUTRAL">
    	<description>No gear</description>
    </element>
    <element name="LOWGEAR">
    	<description>1st gear hold</description>
    </element>
    <element name="FORWARD_DRIVE_2">
    </element>
    <element name="FORWARD_DRIVE_3">
    </element>
    <element name="FORWARD_DRIVE_4">
    	<description>Or Overdrive</description>
    </element>
    <element name="FORWARD_DRIVE_5">
    	<description>Or Overdrive</description>
    </element>
    <element name="FORWARD_DRIVE_6">
    	<description>Or Overdrive</description>
    </element>
    <element name="SECOND_GEAR_HOLD">
    </element>
    <element name="THIRD_GEAR_HOLD">
    </element>
    <element name="FOURTH_GEAR_HOLD">
    </element>
    <element name="FIFTH_GEAR_HOLD">
    </element>
    <element name="SIXTH_GEAR_HOLD">
    </element>
  </enum>

  <enum name="SingleTirePressureStatus">
    <description>The pressure status of a tire.</description>
    <element name="UNKNOWN">
    </element>
    <element name="NORMAL">
    </element>
    <element name="LOW">
    </element>
    <element name="FAULT">
    </element>
    <element name="NOT_SUPPORTED">
    </element>
  </enum>

  <struct name="SingleTireStatus">
    <param name="status" type="SingleTirePressureStatus">
      <description>See SingleTirePressureStatus.</description>
	</param>
    <param name="pressure" type="Integer" minvalue="0" maxvalue="255">
      <description>The tire pressure in PSI.</description>
	</param>
  </struct>

  <enum name="TirePressureTellTale">
    <description>Reflects the status of the cluster instrument warning light.</description>
    <element name="OFF">
    </element>
    <element name="ON">
    </element>
    <element name="FLASH">
    </element>
  </enum>

  <enum name="VehicleDataResultCode">
    <description>Enumeration that describes possible result codes of a vehicle data entry request.</description>
    <element name="SUCCESS" internal_name="VDRC_SUCCESS"/>
    <element name="DISALLOWED" internal_name="VDRC_DISALLOWED"/>
    <element name="USER_DISALLOWED" internal_name="VDRC_USER_DISALLOWED"/>
    <element name="INVALID_ID" internal_name="VDRC_INVALID_ID"/>
    <element name="VEHICLE_DATA_NOT_AVAILABLE" internal_name="VDRC_DATA_NOT_AVAILABLE"/>
    <element name="DATA_ALREADY_SUBSCRIBED" internal_name="VDRC_DATA_ALREADY_SUBSCRIBED"/>
    <element name="DATA_NOT_SUBSCRIBED" internal_name="VDRC_DATA_NOT_SUBSCRIBED"/>
    <element name="IGNORED" internal_name="VDRC_IGNORED"/>
  </enum>

  <struct name="TireStatus">
      <description>The status and pressure of the tires.</description>

    <param name="pressureTellTale" type="TirePressureTellTale">
      <description>See TirePressureTellTale.</description>
	</param>
    <param name="leftFront" type="SingleTireStatus">
      <description>The status of the left front tire.</description>
	</param>
    <param name="rightFront" type="SingleTireStatus">
      <description>The status of the right front tire.</description>
	</param>
    <param name="leftRear" type="SingleTireStatus">
      <description>The status of the left rear tire.</description>
	</param>
    <param name="rightRear" type="SingleTireStatus">
      <description>The status of the right rear tire.</description>
	</param>
    <param name="innerLeftRear" type="SingleTireStatus">
      <description>The status of the inner left rear.</description>
	</param>
    <param name="innerRightRear" type="SingleTireStatus">
      <description>The status of the inner right rear.</description>
	</param>
  </struct>

  <struct name="GPSData">
    <description>Struct with the GPS data.</description>
	<issue creator="rs">Ford to define, which values are really needed. For efficiency it might make sense to support a basic and extended data type</issue>
	<param name="longitudeDegrees" type="Integer" minvalue="-1000000000" maxvalue="1000000000">
		<issue creator="rs">Format needs to be defined explicitely.</issue>
    </param>
    <param name="latitudeDegrees" type="Integer" minvalue="-1000000000" maxvalue="1000000000">
		<issue creator="rs">Format needs to be defined explicitely.</issue>
    </param>
    <param name="utcYear" type="Integer" minvalue="2010" maxvalue="2100">
    	<description>The current UTC year.</description>
    </param>
    <param name="utcMonth" type="Integer" minvalue="1" maxvalue="12">
    	<description>The current UTC month.</description>
    </param>
    <param name="utcDay" type="Integer" minvalue="1" maxvalue="31">
    	<description>The current UTC day.</description>
    </param>
    <param name="utcHours" type="Integer" minvalue="0" maxvalue="23">
    	<description>The current UTC hour.</description>
    </param>
    <param name="utcMinutes" type="Integer" minvalue="0" maxvalue="59">
    	<description>The current UTC minute.</description>
    </param>
    <param name="utcSeconds" type="Integer" minvalue="0" maxvalue="59">
    	<description>The current UTC second.</description>
    </param>
    <param name="compassDirection" type="CompassDirection">
    	<description>See CompassDirection.</description>
    </param>
    <param name="pdop" type="Integer" minvalue="0" maxvalue="31">
    	<description>PDOP.</description>
    </param>
    <param name="hdop" type="Integer" minvalue="0" maxvalue="31">
    	<description>HDOP.</description>
    </param>
    <param name="vdop" type="Integer" minvalue="0" maxvalue="31">
    	<description>VDOP.</description>
    </param>
    <param name="actual" type="Boolean">
    	<description>True, if actual.</description>
    	<description>False, if infered.</description>
    </param>
    <param name="satellites" type="Integer" minvalue="0" maxvalue="31">
    	<description>Number of satellites in view</description>
    </param>
    <param name="dimension" type="Dimension">
    	<description>See Dimension</description>
    </param>
    <param name="altitude" type="Integer" minvalue="-10000" maxvalue="10000">
    	<description>Altitude in meters</description>
    </param>
    <param name="heading" type="Integer" minvalue="0" maxvalue="360">
    	<description>The heading. North is 0</description>
    </param>
    <param name="speed" type="Integer" minvalue="0" maxvalue="400">
    	<description>The speed in KPH</description>
    </param>
  </struct>

  <struct name="VehicleDataResult">
    <description>Individual published data request result</description>
    <param name="dataType" type="VehicleDataType">
      <description>Defined published data element type.</description>
    </param>
    <param name="resultCode" type="VehicleDataResultCode">
      <description>Published data result code.</description>
    </param>
  </struct>

  <struct name="StartTime">
    <param name="hours" type="Integer" minvalue="0" maxvalue="59">
    	<description>The hour of the media clock.</description>
    	<description>Some radios only support a max of 19 hours. If out of range, it will be rejected.</description>
   	</param>
    <param name="minutes" type="Integer" minvalue="0" maxvalue="59" />
    <param name="seconds" type="Integer" minvalue="0" maxvalue="59" />
  </struct>

  <struct name="TextField">
    <param name="name" type="TextFieldName">
      <description>The name that identifies the field. See TextFieldName.</description>
    </param>
    <param name="characterSet" type="CharacterSet">
      <description>The character set that is supported in this field. See CharacterSet.</description>
    </param>
    <param name="width" type="Integer" minvalue="1" maxvalue="500">
      <description>The number of characters in one row of this field.</description>
    </param>
    <param name="rows" type="Integer" minvalue="1" maxvalue="3">
      <description>The number of rows of this field.</description>
    </param>
  </struct>

  <enum name="PermissionStatus">
    <description>Enumeration that describes possible permission states of a policy table entry.</description>
    <element name="ALLOWED" internal_name="PS_ALLOWED"/>
    <element name="DISALLOWED" internal_name="PS_DISALLOWED"/>
    <element name="USER_DISALLOWED" internal_name="PS_USER_DISALLOWED"/>
    <element name="USER_CONSENT_PENDING" internal_name="PS_USER_CONSENT_PENDING"/>
  </enum>

  <struct name="HMIPermissions">
    <param name="allowed" type="HMILevel" minsize="0" maxsize="100" array="true">
      <description>A set of all HMI levels that are permitted for this given RPC.</description>
    </param>
    <param name="userDisallowed" type="HMILevel" minsize="0" maxsize="100" array="true">
      <description>A set of all HMI levels that are prohibited for this given RPC.</description>
    </param>
  </struct>

  <struct name="ParameterPermissions">
    <param name="allowed" type="String" minsize="0" maxsize="100" maxlength = "100" array="true">
      <description>A set of all parameters that are permitted for this given RPC.</description>
    </param>
    <param name="userDisallowed" type="String" minsize="0" maxsize="100" array="true">
      <description>A set of all parameters that are prohibited for this given RPC.</description>
    </param>
  </struct>

  <struct name="PermissionItem">
    <param name="rpcName" type="String" maxlength="100">
    	<description>Name of the individual RPC in the policy table.</description>
   	</param>
    <param name="hmiPermissions" type="HMIPermissions" />
    <param name="parameterPermissions" type="ParameterPermissions" />
  </struct>

  <struct name="DisplayCapabilities">
    <description>Contains information about the display capabilities.</description>
    <param name="displayType" type="DisplayType">
      <description>The type of the display. See DisplayType</description>
    </param>
    <param name="textFields" type="TextField" minsize="1" maxsize="100" array="true">
      <description>A set of all fields that support text data. See TextField</description>
    </param>
    <param name="mediaClockFormats" type="MediaClockFormat" minsize="1" maxsize="100" array="true">
      <description>A set of all supported formats of the media clock. See MediaClockFormat</description>
    </param>
  </struct>

  <struct name="ButtonCapabilities">
    <description>Contains information about a button's capabilities.</description>
    <param name="name" type="ButtonName">
      <description>The name of the button. See ButtonName.</description>
    </param>
    <param name="shortPressAvailable" type="Boolean">
      <description>The button supports a short press.</description>
      <description>Whenever the button is pressed short, onButtonPressed( SHORT) will be invoked.</description>
    </param>
    <param name="longPressAvailable" type="Boolean">
      <description>The button supports a LONG press.</description>
      <description>Whenever the button is pressed long, onButtonPressed( LONG) will be invoked.</description>
    </param>
    <param name="upDownAvailable" type="Boolean">
      <description>The button supports "button down" and "button up".</description>
      <description>Whenever the button is pressed, onButtonEvent( DOWN) will be invoked.</description>
      <description>Whenever the button is released, onButtonEvent( UP) will be invoked.</description>
    </param>
  </struct>

  <struct name="SoftButtonCapabilities">
    <description>Contains information about a SoftButton's capabilities.</description>
    <param name="shortPressAvailable" type="Boolean">
      <description>The button supports a short press.</description>
      <description>Whenever the button is pressed short, onButtonPressed( SHORT) will be invoked.</description>
    </param>
    <param name="longPressAvailable" type="Boolean">
      <description>The button supports a LONG press.</description>
      <description>Whenever the button is pressed long, onButtonPressed( LONG) will be invoked.</description>
    </param>
    <param name="upDownAvailable" type="Boolean">
      <description>The button supports "button down" and "button up".</description>
      <description>Whenever the button is pressed, onButtonEvent( DOWN) will be invoked.</description>
      <description>Whenever the button is released, onButtonEvent( UP) will be invoked.</description>
    </param>
    <param name="imageSupported" type="Boolean">
      <description>The button supports referencing a static or dynamic image.</description>
    </param>
  </struct>

  <struct name="PresetBankCapabilities">
    <description>Contains information about on-screen preset capabilities.</description>
    <param name="onScreenPresetsAvailable" type="Boolean">
      <description>Onscreen custom presets are available.</description>
    </param>
  </struct>

<!-- TODO: REMOVE
  <enum name="DisplayLayout">
    <description>Dynamic enumeration that contains predefined alternate screen layouts as well as app-defined layouts.</description>
	<issue creator="sb">Can an enumeration be dynamically changed (custom elements added by an app at runtime?)</issue>
    <element name="ONSCREEN_PRESETS">
      <description>Custom screen containing app-defined onscreen presets.  Currently defined for GEN2.</description>
    </element>
  </enum>
-->

  <struct name="MenuParams">
    <param name="parentID" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="false">
      <description>unique ID of the sub menu, the command will be added to.</description>
      <description>If not provided, it will be provided to the top level of the in application menu.</description>
    </param>

    <param name="position" type="Integer" minvalue="0" maxvalue="1000" mandatory="false">
      <description>Position within the items that are are at top level of the in application menu.</description>
      <description>0 will insert at the front.</description>
      <description>1 will insert at the second position.</description>
      <description>if position is greater or equal than the number of items on top level, the sub menu will be appended to the end.</description>
      <description>If this param was omitted the entry will be added at the end.</description>
    </param>

    <param name="menuName" type="String" maxlength="500">
      <description>Text to show in the menu for this sub menu.</description>
    </param>
  </struct>

  <struct name="TTSChunk">
    <description>A TTS chunk, that consists of the text/phonemes to speak and the type (like text or SAPI)</description>
    <param name="text" maxlength="500" type="String">
      <description>The text or phonemes to speak.</description>
      <description>May not be empty.</description>
    </param>
    <param name="type" type="SpeechCapabilities">
      <description>Describes, whether it is text or a specific phoneme set. See SpeechCapabilities</description>
    </param>
  </struct>

  <struct name="DTC">
    <param name="identifier" type="String" maxlength="500">
      <description>String containing hexadecimal identifier as well as other common names.</description>
    </param>
    <param name="statusByte" type="String" maxlength="500">
      <description>Hexadecimal byte string.</description>
    </param>
  </struct>

  <struct name="Turn">
    <param name="navigationText" type="String" maxlength="500" mandatory="false">
    </param>
    <param name="turnIcon" type="Image">
    </param>
  </struct>

  <struct name="VehicleType">
    <param name="make" type="String" maxlength="500" mandatory="false">
      <description>Make of the vehicle</description>
      <description>e.g. Ford</description>
    </param>
    <param name="model" type="String" maxlength="500" mandatory="false">
      <description>Model of the vehicle</description>
      <description>e.g. Fiesta</description>
    </param>
    <param name="modelYear" type="String" maxlength="500" mandatory="false">
      <description>Model Year of the vehicle</description>
      <description>e.g. 2013</description>
    </param>
    <param name="trim" type="String" maxlength="500" mandatory="false">
      <description>Trim of the vehicle</description>
      <description>e.g. SE</description>
    </param>

  </struct>

  <enum name="FileType">
    <description>Enumeration listing possible file types.</description>
    <element name="GRAPHIC_BMP" />
    <element name="GRAPHIC_JPEG" />
    <element name="GRAPHIC_PNG" />
    <element name="AUDIO_WAVE" />
    <element name="AUDIO_MP3" />
  </enum>

  <enum name="AppType">
    <description>Enumeration listing possible app types.</description>
    <element name="DEFAULT" />
    <element name="COMMUNICATION" />
    <element name="MEDIA" />
    <element name="MESSAGING" />
    <element name="NAVIGATION" />
    <element name="INFORMATION" />
    <element name="SOCIAL" />
    <element name="BACKGROUND_PROCESS" />
    <element name="TESTING" />
    <element name="SYSTEM" />
  </enum>

  <enum name="FunctionID">
    <description>Enumeration linking function names with function IDs in WiPro protocol.</description>
    <description>Assumes enumeration starts at value 0.</description>
    <element name="RESERVED" value="0" />
    <element name="RegisterAppInterfaceID" value="1" />
    <element name="UnregisterAppInterfaceID" value="2" />
    <element name="SetGlobalPropertiesID" value="3" />
    <element name="ResetGlobalPropertiesID" value="4" />
    <element name="AddCommandID" value="5" />
    <element name="DeleteCommandID" value="6" />
    <element name="AddSubMenuID" value="7" />
    <element name="DeleteSubMenuID" value="8" />
    <element name="CreateInteractionChoiceSetID" value="9" />
    <element name="PerformInteractionID" value="10" />
    <element name="DeleteInteractionChoiceSetID" value="11" />
    <element name="AlertID" value="12" />
    <element name="ShowID" value="13" />
    <element name="SpeakID" value="14" />
    <element name="SetMediaClockTimerID" value="15" />
    <element name="EncodedSyncPDataID" value="16" />
    <element name="DialNumberID" value="17" />
    <element name="PerformAudioPassThruID" value="18" />
    <element name="EndAudioPassThruID" value="19" />
    <element name="SubscribeButtonID" value="20" />
    <element name="UnsubscribeButtonID" value="21" />
    <element name="SubscribeVehicleDataID" value="22" />
    <element name="UnsubscribeVehicleDataID" value="23" />
    <element name="GetVehicleDataID" value="24" />
    <element name="ReadDIDID" value="25" />
    <element name="GetDTCsID" value="26" />
    <element name="ScrollableMessageID" value="27" />
    <element name="SliderID" value="28" />
    <element name="ShowConstantTBTID" value="29" />
    <element name="AlertManeuverID" value="30" />
    <element name="UpdateTurnListID" value="31" />
    <element name="ChangeRegistrationID" value="32" />
    <element name="GenericResponseID" value="33" />
    <element name="PutFileID" value="34" />
    <element name="DeleteFileID" value="35" />
    <element name="ListFilesID" value="36" />
    <element name="SetAppIconID" value="37" />
    <element name="SetDisplayLayoutID" value="38" />
    <element name="OnHMIStatusID" value="39" />
    <element name="OnAppInterfaceUnregisteredID" value="40" />
    <element name="OnButtonEventID" value="41" />
    <element name="OnButtonPressID" value="42" />
    <element name="OnVehicleDataID" value="43" />
    <element name="OnCommandID" value="44" />
    <element name="OnEncodedSyncPDataID" value="45" />
    <element name="OnTBTClientStateID" value="46" />
    <element name="OnDriverDistractionID" value="47" />
    <element name="OnPermissionsChangeID" value="48" />
    <element name="OnAudioPassThruID" value="49" />
    <element name="OnLanguageChangeID" value="50" />
  </enum>

  <enum name="messageType">
    <description>Enumeration linking message types with function types in WiPro protocol.</description>
    <description>Assumes enumeration starts at value 0.</description>
    <element name="request" value="0" />
    <element name="response" value="1" />
    <element name="notification" value="2" />
  </enum>

  <!-- Requests/Responses -->

  <function name="RegisterAppInterface" functionID="RegisterAppInterfaceID" messagetype="request">
    <description>Establishes an interface with a mobile application.</description>
    <description>Before registerAppInterface no other commands will be accepted/executed.</description>
    <param name="syncMsgVersion" type="SyncMsgVersion">
      <description>See SyncMsgVersion</description>
    </param>
    <param name="appName" type="String" maxlength="100">
      <description>The mobile application name, e.g. "Ford Drive Green".</description>
      <description>Needs to be unique over all applications.</description>
      <description>May not be empty.</description>
      <description>May not start with a new line character.</description>
      <description>May not interfere with any name or synonym of previously registered applications and the following list of words @TODO: Create list(global commands)</description>
      <description>Needs to be unique over all applications. Applications with the same name will be rejected.</description>
      <description>Only characters from char set [@TODO: Create char set (character/hex value) for each ACM and refer to] are supported.</description>
    </param>

    <param name="ttsName" type="TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false" >
      <description>TTS string for VR recognition of the mobile application name, e.g. "Ford Drive Green".</description>
      <description>Meant to overcome any failing on speech engine in properly pronouncing / understanding app name.</description>
      <description>Needs to be unique over all applications.</description>
      <description>May not be empty.</description>
      <description>May not start with a new line character.</description>
      <description>May not interfere with any name or synonym of previously registered applications and the following list of words @TODO: Create list(global commands)</description>
      <description>Needs to be unique over all applications. Applications with the same name will be rejected.</description>
      <description>Only characters from char set [@TODO: Create char set (character/hex value) for each ACM and refer to] are supported.</description>
    </param>

    <param name="ngnMediaScreenAppName" type="String" maxlength="100" mandatory="false">
      <description>Provides an abbreviated version of the app name (if needed), that will be displayed on the NGN media screen.</description>
      <description>If not provided, the appName is used instead (and will be truncated if too long)</description>
      <description>Only characters from char set [@TODO: Create char set (character/hex value) for each ACM and refer to] are supported.</description>
    </param>

    <param name="vrSynonyms" type="String" maxlength="40" minsize="1" maxsize="100" array="true" mandatory="false">
      <description>Defines an additional voice recognition command.</description>
      <description>May not interfere with any name or synonym of previously registered applications and the following list of words @TODO: Create list(global commands)</description>
      <description>Only characters from char set [@TODO: Create char set (character/hex value) for each ACM and refer to] are supported.</description>
    </param>
<!-- deprecating
    <param name="usesVehicleData" type="Boolean" defvalue="false" mandatory="false">
      <description>If not provided, the default is equal to False"</description>
      <description>Indicates if the mobile application wants to use vehicle data like GPS or speed.</description>
    </param>
-->
    <param name="isMediaApplication" type="Boolean">
      <description>Indicates if the application is a media or a non-media application.</description>
      <description>Only media applications will be able to stream audio to Sync that is audible outside of the BT media source.</description>
    </param>
    <param name="languageDesired" type="Language" mandatory="true">
      <description>See Language</description>
      <description>Current app’s expected VR+TTS language</description>
      <description>If there is a mismatch with SYNC, the app will be able to change this registration with changeRegistration prior to app being brought into focus.</description>
    </param>
    <param name="hmiDisplayLanguageDesired" type="Language" mandatory="true">
      <description>See Language</description>
      <description>Current app’s expected display language</description>
      <description>If there is a mismatch with SYNC, the app will be able to change this registration with changeRegistration prior to app being brought into focus.</description>
    </param>
<!-- deprecating
    <param name="autoActivateID" type="String" maxlength="16" mandatory="false">
      <description>Used to support auto activation after an initial successful registerAppInterface (for example after an ignition cycle).</description>
      <description>The app should always provide the id that was provided by the most recent registerAppInterface response.</description>
      <description>If this is the first call to registerAppInterface, then do not provide this parameter at all.</description>
      <description>If not provided or not matching with the id of the last registerAppInterface response, the app will not be automatically put into foreground on startup.</description>
    </param>
-->
    <param name="appType" type="AppType" minsize="1" maxsize="100" array="true" mandatory="false">
      <description>See AppType</description>
      <description>List of all applicable app types stating which classifications to be given to the app.</description>
      <description>e.g. for platforms like GEN2, this will determine which "corner(s)" the app can populate.</description>
    </param>
    <param name="appID" type="String" maxlength="100" mandatory="true">
      <description>ID used to validate app with policy table entries</description>
    </param>
  </function>

  <function name="RegisterAppInterface" functionID="RegisterAppInterfaceID" messagetype="response">
    <description>The response to registerAppInterface</description>

    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="GENERIC_ERROR"/>
      <element name="DUPLICATE_NAME"/>
      <element name="TOO_MANY_APPLICATIONS"/>
      <element name="APPLICATION_REGISTERED_ALREADY"/>
      <element name="UNSUPPORTED_VERSION"/>
      <element name="WRONG_LANGUAGE"/>
      <element name="DISALLOWED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>

    <param name="syncMsgVersion" type="SyncMsgVersion" mandatory="false">
      <description>See SyncMsgVersion</description>
    </param>

<!-- deprecating
    <param name="autoActivateID" type="String" maxlength="16" mandatory="false">
      <description>Provides an id that the app may use on a subsequent registerAppInterface to allow for auto activation (for example after an ignition cycle).</description>
    </param>
-->

    <param name="language" type="Language" mandatory="false">
      <description>The currently active VR+TTS language on Sync. See "Language" for options.</description>
    </param>

    <param name="hmiDisplayLanguage" type="Language" mandatory="false">
    <description>The currently active display language on Sync. See "Language" for       options.</description>
    </param>

    <param name="displayCapabilities" type="DisplayCapabilities" mandatory="false">
      <description>See DisplayCapabilities</description>
    </param>

    <param name="buttonCapabilities" type="ButtonCapabilities" minsize="1" maxsize="100" array="true" mandatory="false">
      <description>See ButtonCapabilities</description >
    </param>

    <param name="softButtonCapabilities" type="SoftButtonCapabilities" minsize="1" maxsize="100" array="true" mandatory="false">
      <description>If returned, the platform supports on-screen SoftButtons.</description>
      <description>See SoftButtonCapabilities</description >
    </param>

    <param name="presetBankCapabilities" type="PresetBankCapabilities" mandatory="false">
      <description>If returned, the platform supports custom on-screen Presets.</description>
      <description>See PresetBankCapabilities</description >
    </param>

    <param name="hmiZoneCapabilities" type="HmiZoneCapabilities" minsize="1" maxsize="100" array="true" mandatory="false">
		<issue creator="rs">If not used yet => remove</issue>
      <description>See HmiZoneCapabilities</description>
    </param>

    <param name="speechCapabilities" type="SpeechCapabilities" minsize="1" maxsize="100" array="true" mandatory="false">
      <description>See SpeechCapabilities</description>
    </param>

    <param name="vrCapabilities" type="VrCapabilities" minsize="1" maxsize="100" array="true" mandatory="false">
      <description>See VrCapabilities</description>
    </param>

    <param name="vehicleType" type="VehicleType" mandatory="false">
      <description>Specifies the vehicle's type. See VehicleType.</description>
    </param>

  </function>

  <function name="UnregisterAppInterface" functionID="UnregisterAppInterfaceID" messagetype="request">
    <description>Closes an interface from a mobile application.</description>
    <description>After unregisterAppInterface, no commands other than registerAppInterface will be accepted/executed.</description>
    <description>Will fail, if no registerAppInterface was completed successfully before.</description>
  </function>

  <function name="UnregisterAppInterface" functionID="UnregisterAppInterfaceID" messagetype="response">

    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>

  </function>

  <function name="SetGlobalProperties" functionID="SetGlobalPropertiesID" messagetype="request">
    <description>Allows setting global properties.</description>

    <param name="helpPrompt" type="TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false" >
      <description>The help prompt.</description>
      <description>An array of text chunks of type TTSChunk. See TTSChunk</description>
      <description>The array must have at least one item</description>
    </param>

    <param name="timeoutPrompt" type="TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false" >
      <description>Help text for a wait timeout.</description>
      <description>An array of text chunks of type TTSChunk. See TTSChunk</description>
      <description>The array must have at least one item</description>
    </param>

    <param name="vrHelpTitle" type="String" maxlength="500" mandatory="false">
      <description>VR Help Title text.</description>
      <description>If omitted on supported displays, the default SYNC help title shall be used.</description>
    </param>

    <param name="vrHelp" type="VrHelpItem" minsize="1" maxsize="100" array="true" mandatory="false">
      <description>VR Help Items.</description>
      <description>If omitted on supported displays, the default SYNC generated help items shall be used.</description>
      <description>If the list of VR Help Items contains nonsequential positions (e.g. [1,2,4]), the RPC shall be rejected.</description>
    </param>

  </function>

  <function name="SetGlobalProperties" functionID="SetGlobalPropertiesID" messagetype="response">

    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	</param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="DISALLOWED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>

  </function>

  <function name="ResetGlobalProperties" functionID="ResetGlobalPropertiesID" messagetype="request">
    <description>Allows resetting global properties.</description>

    <param name="properties" type="GlobalProperty" minsize="1" maxsize="100" array="true" >
      <description>Contains the names of all global properties (like timeoutPrompt) that should be unset. Resetting means, that they have the same value as at start up (default)</description>
    </param>
  </function>

  <function name="ResetGlobalProperties" functionID="ResetGlobalPropertiesID" messagetype="response">

    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="DISALLOWED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>

  <function name="AddCommand" functionID="AddCommandID" messagetype="request">
    <description>Adds a command to the in application menu.</description>
    <description>Either menuParams or vrCommands must be provided.</description>

    <param name="cmdID" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="true">
      <description>unique ID of the command to add.</description>
    </param>

    <param name="menuParams" type="MenuParams" mandatory="false">
      <description>Optional sub value containing menu parameters</description>
    </param>

    <param name="vrCommands" type="String" minsize="1" maxsize="100" maxlength="99" array="true" mandatory="false">
      <description>An array of strings to be used as VR synonyms for this command.</description>
      <description>If this array is provided, it may not be empty.</description>
    </param>

    <param name="cmdIcon" type="Image" mandatory="false">
       <description>Image struct determining whether static or dynamic icon.</description>
       <description>If omitted on supported displays, no (or the default if applicable) icon shall be displayed.</description>
     </param>

  </function>

  <function name="AddCommand" functionID="AddCommandID" messagetype="response">

    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="INVALID_ID"/>
      <element name="DUPLICATE_NAME"/>
      <element name="DISALLOWED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>

  </function>

  <function name="DeleteCommand" functionID="DeleteCommandID" messagetype="request">
    <description>Deletes all commands from the in-application menu with the specified command id.</description>

    <param name="cmdID" type="Integer" minvalue="0" maxvalue="2000000000">
      <description>ID of the command(s) to delete.</description>
    </param>

  </function>

  <function name="DeleteCommand" functionID="DeleteCommandID" messagetype="response">
    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="INVALID_ID"/>
      <element name="IN_USE"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>

  </function>

  <function name="AddSubMenu" functionID="AddSubMenuID" messagetype="request">
    <description>Adds a sub menu to the in-application menu.</description>

    <param name="menuID" type="Integer" minvalue="0" maxvalue="2000000000">
      <description>unique ID of the sub menu to add.</description>
    </param>

    <param name="position" type="Integer" minvalue="0" maxvalue="1000" defvalue="1000" mandatory="false">
      <description>Position within the items that are are at top level of the in application menu.</description>
      <description>0 will insert at the front.</description>
      <description>1 will insert at the second position.</description>
      <description>If position is greater or equal than the number of items on top level, the sub menu will be appended to the end.</description>
      <description>Position of any submenu will always be located before the return and exit options</description>
      <description>If this param was omitted the entry will be added at the end.</description>
    </param>

    <param name="menuName" maxlength="500" type="String">
      <description>Text to show in the menu for this sub menu.</description>
    </param>
  </function>

  <function name="AddSubMenu" functionID="AddSubMenuID" messagetype="response">
    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="INVALID_ID"/>
      <element name="DUPLICATE_NAME"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>

  <function name="DeleteSubMenu" functionID="DeleteSubMenuID" messagetype="request">
    <description>Deletes a submenu from the in-application menu.</description>

    <param name="menuID" type="Integer" minvalue="0" maxvalue="2000000000">
      <description>The "menuID" of the submenu to delete. (See addSubMenu.menuID)</description>
    </param>

  </function>

  <function name="DeleteSubMenu" functionID="DeleteSubMenuID" messagetype="response">

    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="INVALID_ID"/>
      <element name="IN_USE"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>

  </function>

  <function name="CreateInteractionChoiceSet" functionID="CreateInteractionChoiceSetID" messagetype="request">
    <description>creates interaction choice set to be used later by performInteraction</description>

    <param name="interactionChoiceSetID" type="Integer" minvalue="0" maxvalue="2000000000">
      <description>Unique ID used for this interaction choice set.</description>
    </param>

    <param name="choiceSet" type="Choice" minsize="1" maxsize="100" array="true" />
  </function>

  <function name="CreateInteractionChoiceSet" functionID="CreateInteractionChoiceSetID" messagetype="response">
    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="INVALID_ID"/>
      <element name="DUPLICATE_NAME"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>

  <function name="PerformInteraction" functionID="PerformInteractionID" messagetype="request">
    <description>Triggers an interaction (e.g. "Permit GPS?" - Yes, no, Always Allow).</description>

    <param name="initialText" type="String" maxlength="500" >
      <description>Text to be displayed first.</description>
    </param>

    <param name="initialPrompt" type="TTSChunk" minsize="1" maxsize="100" array="true">
      <description>This is the intial prompt spoken to the user at the start of an interaction</description>
      <description>An array of text chunks of type TTSChunk. See TTSChunk</description>
      <description>The array must have at least one item</description>
    </param>

    <param name="interactionMode" type="InteractionMode">
      <description>See InteractionMode.</description>
    </param>

    <param name="interactionChoiceSetIDList" type="Integer" minsize="1" maxsize="100" minvalue="0" maxvalue="2000000000" array="true">
      <description>List of interaction choice set IDs to use with an interaction.</description>
    </param>

    <param name="helpPrompt" type="TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false">
      <description>Help text. This is the spoken string when a user speaks "help" when the interaction is occuring.</description>
      <description>An array of text chunks of type TTSChunk. See TTSChunk</description>
      <description>The array must have at least one item</description>
    </param>

    <param name="timeoutPrompt" type="TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false">
      <description>Timeout text. This text is spoken when a VR interaction times out.</description>
      <description>An array of text chunks of type TTSChunk. See TTSChunk</description>
      <description>The array must have at least one item</description>
    </param>

    <param name="timeout" type="Integer" minvalue="5000" maxvalue="100000" defvalue="10000" mandatory="false">
      <description>Timeout in milliseconds.</description>
	  <description>If omitted a standard value of 10000 milliseconds is used.</description>
    </param>

    <param name="vrHelp" type="VrHelpItem" minsize="1" maxsize="100" array="true" mandatory="false">
      <description>Ability to send suggested VR Help Items to display on-screen during Perform Interaction.</description>
      <description>If omitted on supported displays, the default SYNC generated list of suggested choices shall be displayed.</description>
    </param>

  </function>

  <function name="PerformInteraction" functionID="PerformInteractionID" messagetype="response">

   <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="INVALID_ID"/>
      <element name="DUPLICATE_NAME"/>
      <element name="TIMED_OUT"/>
      <element name="ABORTED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>

    <param name="choiceID" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="false">
      <description>ID of the choice that was selected in response to PerformInteraction.</description>
    </param>

    <param name="triggerSource" type="TriggerSource" mandatory="false">
      <description>See TriggerSource</description>
    </param>

  </function>

  <function name="DeleteInteractionChoiceSet" functionID="DeleteInteractionChoiceSetID" messagetype="request">
    <description>Deletes interaction choice set that has been created with "CreateInteractionChoiceSet".</description>
    <description>The interaction may only be deleted when not currently in use by a "performInteraction".</description>

    <param name="interactionChoiceSetID" type="Integer" minvalue="0" maxvalue="2000000000">
      <description>ID of the interaction choice set to delete.</description>
    </param>
  </function>

  <function name="DeleteInteractionChoiceSet" functionID="DeleteInteractionChoiceSetID" messagetype="response">
    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="INVALID_ID"/>
      <element name="IN_USE"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>

  <function name="Alert" functionID="AlertID" messagetype="request">
    <description>Shows an alert which typically consists of text-to-speech message and text on the display. At least either alertText1, alertText2 or TTSChunks need to be provided.</description>

    <param name="alertText1" type="String" maxlength="500" mandatory="false">
      <description>The first line of the alert text field</description>
    </param>

    <param name="alertText2" type="String" maxlength="500" mandatory="false">
      <description>The second line of the alert text field</description>
    </param>

    <param name="alertText3" type="String" maxlength="500" mandatory="false">
      <description>The optional third line of the alert text field</description>
    </param>

    <param name="ttsChunks" type="TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false">
      <description>An array of text chunks of type TTSChunk. See TTSChunk</description>
      <description>The array must have at least one item</description>
    </param>

    <param name="duration" type="Integer" minvalue="3000" maxvalue="10000" defvalue="5000" mandatory="false">
      <description>Timeout in milliseconds.</description>
      <description>Typical timeouts are 3-5 seconds</description>
      <description>If omitted, timeout is set to 5s.</description>
    </param>

    <param name="playTone" type="Boolean" mandatory="false">
      <description>Defines if tone should be played. Tone is played before TTS.</description>
      <description>If omitted, no tone is played.</description>
    </param>

    <param name="softButtons" type="SoftButton" minsize="0" maxsize="4" array="true" mandatory="false">
      <description>App defined SoftButtons.</description>
      <description>If omitted on supported displays, the displayed alert shall not have any SoftButtons.</description>
    </param>

  </function>

  <function name="Alert" functionID="AlertID" messagetype="response">

    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="ABORTED"/>
      <element name="DISALLOWED"/>
      <element name="USER_DISALLOWED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>

    <param name="tryAgainTime" type="Integer" minvalue="0" maxvalue="2000000000">
      <description>Amount of time (in seconds) that an app must wait before resending an alert.</description>
      <description>If provided, another system event or overlay currently has a higher priority than this alert.</description>
      <description>An app must not send an alert without waiting at least the amount of time dictated.</description>
    </param>

  </function>

  <function name="Show" functionID="ShowID" messagetype="request">
    <description>Updates the persistent display. Supported fields depend on display capabilities.</description>

    <param name="mainField1" type="String" maxlength="500" mandatory="false">
      <description>The text that should be displayed in a single or upper display line.</description>
      <description>If this text is not set, the text of mainField1 stays unchanged.</description>
      <description>If this text is empty "", the field will be cleared.</description>
    </param>

    <param name="mainField2" type="String" maxlength="500" mandatory="false">
      <description>The text that should be displayed on the second display line.</description>
      <description>If this text is not set, the text of mainField2 stays unchanged.</description>
      <description>If this text is empty "", the field will be cleared.</description>
    </param>

    <param name="mainField3" type="String" maxlength="500" mandatory="false">
      <description>The text that should be displayed on the second "page" first display line.</description>
      <description>If this text is not set, the text of mainField3 stays unchanged.</description>
      <description>If this text is empty "", the field will be cleared.</description>
    </param>

    <param name="mainField4" type="String" maxlength="500" mandatory="false">
      <description>The text that should be displayed on the second "page" second display line.</description>
      <description>If this text is not set, the text of mainField4 stays unchanged.</description>
      <description>If this text is empty "", the field will be cleared.</description>
    </param>

    <param name="alignment" type="TextAlignment" mandatory="false">
      <description>Specifies how mainField1 and mainField2 texts should be aligned on display.</description>
      <description>If omitted, texts will be centered</description>
    </param>

    <param name="statusBar" type="String" maxlength="500" mandatory="false">
      <description>Requires investigation regarding the nav display capabilities. Potentially lower lowerStatusBar, upperStatusBar, titleBar, etc.</description>
    </param>

    <param name="mediaClock" type="String" maxlength="500" mandatory="false">
      <description>Text value for MediaClock field. Has to be properly formatted by Mobile App according to Sync capabilities.</description>
      <description>If this text is set, any automatic media clock updates previously set with SetMediaClockTimer will be stopped.</description>
       <issue creator="rs">To be deprecated (Clearing should be done in SetMediaClockTimer)</issue>
    </param>

    <param name="mediaTrack" type="String" maxlength="500" mandatory="false">
      <description>The text that should be displayed in the track field.</description>
      <description>This field is only valid for media applications on NGN type ACMs.</description>
      <description>If this text is not set, the text of mediaTrack stays unchanged.</description>
      <description>If this text is empty "", the field will be cleared.</description>
    </param>

     <param name="graphic" type="Image" mandatory="false">
       <description>Image struct determining whether static or dynamic image to display in app.</description>
       <description>If omitted on supported displays, the displayed graphic shall not change.</description>
     </param>

    <param name="softButtons" type="SoftButton" minsize="0" maxsize="8" array="true" mandatory="false">
      <description>App defined SoftButtons.</description>
      <description>If omitted on supported displays, the currently displayed SoftButton values will not change.</description>
    </param>

    <param name="customPresets" type="String" maxlength="500" minsize="0" maxsize="6" array="true" mandatory="false">
      <description>App labeled on-screen presets (i.e. GEN2).</description>
      <description>If omitted on supported displays, the presets will be shown as not defined.</description>
    </param>

  </function>

  <function name="Show" functionID="ShowID" messagetype="response">

    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
    </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="DISALLOWED"/>
      <element name="ABORTED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>

  <function name="Speak" functionID="SpeakID" messagetype="request">
    <description>Speaks a text.</description>

    <param name="ttsChunks" type="TTSChunk" minsize="1" maxsize="100" array="true">
      <description>An array of text chunks of type TTSChunk. See TTSChunk</description>
      <description>The array must have at least one item</description>
    </param>

  </function>

  <function name="Speak" functionID="SpeakID" messagetype="response">

    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
    </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="DISALLOWED"/>
      <element name="ABORTED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>

  </function>

  <function name="SetMediaClockTimer" functionID="SetMediaClockTimerID" messagetype="request">
    <description>Sets the initial media clock value and automatic update method.</description>

    <param name="startTime" type="StartTime" mandatory="false">
      <description>See StartTime</description>
      <description>startTime must be provided for "COUNTUP" and "COUNTDOWN"</description>
      <description>startTime will be ignored for "PAUSE", "RESUME", and "CLEAR"</description>
    </param>

    <param name="updateMode" type="UpdateMode" mandatory="true">
      <description>Enumeration to control the media clock.</description>
      <description>In case of pause, resume, or clear, the start time value is ignored and shall be left out.  For resume, the time continues with the same value as it was when paused.</description>
    </param>
  </function>

  <function name="SetMediaClockTimer" functionID="SetMediaClockTimerID" messagetype="response">
   <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
    </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="IGNORED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>
 </function>

  <function name="EncodedSyncPData" functionID="EncodedSyncPDataID" messagetype="request">
    <description>Allows encoded data in the form of SyncP packets to be sent to the SYNC module</description>

    <param name="data" type="String" maxlength="10000" minsize="1" maxsize="100" array="true" mandatory="true">
      <description>Contains base64 encoded string of SyncP packets.</description>
      <todo>What is the maxlength</todo>
    </param>
  </function>

  <function name="EncodedSyncPData" functionID="EncodedSyncPDataID" messagetype="response">
    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>

  <function name="DialNumber" functionID="DialNumberID" messagetype="request">
    <description>Dials a phone number and switches to phone application.</description>

    <param name="number" type="String" maxlength="500">
		<issue creator="rs">Should it really be a simple string?</issue>
      <description>Phone number is a string consisting of only the digits and "+", which can be up to 40 chars.</description>
    </param>
  </function>

  <function name="DialNumber" functionID="DialNumberID" messagetype="response">
    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>

   <function name="PerformAudioPassThru" functionID="PerformAudioPassThruID" messagetype="request">
    <description>Starts audio pass thru session </description>
    <param name="initialPrompt" type="TTSChunk" minsize="1" maxsize="100" array="true">
      <description>SYNC will speak this prompt before opening the audio pass thru session</description>
      <description>An array of text chunks of type TTSChunk. See TTSChunk</description>
      <description>The array must have at least one item</description>
    </param>
    <param name="audioPassThruDisplayText1" type="String" mandatory="false" maxlength="500">
      <description>First line of text displayed during audio capture.</description>
    </param>
    <param name="audioPassThruDisplayText2" type="String" mandatory="false" maxlength="500">
      <description>Second line of text displayed during audio capture.</description>
    </param>
    <param name="samplingRate" type="SamplingRate" mandatory="true">
      <description> This value shall be allowed at 8 khz or 16 or 22 or 44 khz.</description>
    </param>
    <param name="maxDuration" type="Integer" minvalue="0" maxvalue="1000000" mandatory="true">
      <description>The maximum duration of audio recording in milliseconds. </description>
    </param>
    <param name="bitsPerSample" type="AudioCaptureQuality" mandatory="true">
      <description>Specifies the quality the audio is recorded. Currently 8 bit or 16 bit.</description>
    </param>
    <param name="audioType" type="AudioType" mandatory="true">
      <description>Specifies the type of audio data being requested.</description>
    </param>
  </function>

  <function name="PerformAudioPassThru" functionID="PerformAudioPassThruID" messagetype="response">
    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
    </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="DISALLOWED"/>
      <element name="REJECTED"/>
      <element name="ABORTED"/>
      <!--      <element name="RETRY"/>-->
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>

  <function name="EndAudioPassThru" functionID="EndAudioPassThruID" messagetype="request">
    <description>When this request is invoked, the audio capture stops.</description>
  </function>

  <function name="EndAudioPassThru" functionID="EndAudioPassThruID" messagetype="response">
     <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
    </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="DISALLOWED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>

  <function name="SubscribeButton" functionID="SubscribeButtonID" messagetype="request">
    <description>Subscribes to built-in HMI buttons.</description>
    <description>The application will be notified by the OnButtonEvent and OnButtonPress.</description>
    <description>To unsubscribe the notifications, use unsubscribeButton.</description>

    <param name="buttonName" type="ButtonName">
      <description>Name of the button to subscribe.</description>
    </param>
  </function>

  <function name="SubscribeButton" functionID="SubscribeButtonID" messagetype="response">
    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="UNSUPPORTED_BUTTON" />
      <element name="IGNORED" />
      <element name="REJECTED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>

  <function name="UnsubscribeButton" functionID="UnsubscribeButtonID" messagetype="request">
    <description>Unsubscribes from built-in HMI buttons.</description>

    <param name="buttonName" type="ButtonName">
      <description>Name of the button to unsubscribe.</description>
    </param>
  </function>

  <function name="UnsubscribeButton" functionID="UnsubscribeButtonID" messagetype="response">
    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="UNSUPPORTED_BUTTON" />
      <element name="IGNORED" />
      <element name="REJECTED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>

  <function name="SubscribeVehicleData" functionID="SubscribeVehicleDataID" messagetype="request">
    <description>Subscribes for specific published data items.</description>
    <description>The data will be only sent if it has changed.</description>
    <description>The application will be notified by the onVehicleData notification whenever new data is available.</description>
    <description>To unsubscribe the notifications, use unsubscribe with the same subscriptionType.</description>

    <param name="dataType" type="VehicleDataType" array="true" mandatory="true" minsize="1" maxsize="100">
      <description>List of defined vehicle data elements.</description>
      <description>See VehicleDataType</description>
    </param>

  </function>

  <function name="SubscribeVehicleData" functionID="SubscribeVehicleDataID" messagetype="response">
   <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="WARNINGS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="IGNORED" />
      <element name="DISALLOWED"/>
      <element name="USER_DISALLOWED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>

    <param name="dataResult" type="VehicleDataResult" mandatory="false" array="true" minsize="1" maxsize="100">
      <description>Permission status of vehicle data element.</description>
    </param>

  </function>

  <function name="UnsubscribeVehicleData" functionID="UnsubscribeVehicleDataID" messagetype="request">
    <description>This function is used to unsubscribe the notifications from the subscribeVehicleData function.</description>

    <param name="dataType" type="VehicleDataType" array="true" mandatory="true" minsize="1" maxsize="100">
      <description>Refers to the vehicle data elements specified by subscribeVehicleData.</description>
      <description>See VehicleDataType</description>
    </param>
  </function>

  <function name="UnsubscribeVehicleData" functionID="UnsubscribeVehicleDataID" messagetype="response">
    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
    </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="WARNINGS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="IGNORED" />
      <element name="DISALLOWED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>

    <param name="dataResult" type="VehicleDataResult" mandatory="false" array="true" minsize="1" maxsize="100">
      <description>Permission status of vehicle data element.</description>
    </param>

  </function>

  <function name="GetVehicleData" functionID="GetVehicleDataID" messagetype="request">
    <description>Non periodic vehicle data read request.</description>

    <param name="dataType" type="VehicleDataType">
      <description>Complex signals like "GPS" should not be transferred as separate notifications, but all together in one notification.</description>
    </param>
  </function>

  <function name="GetVehicleData" functionID="GetVehicleDataID" messagetype="response">

    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	</param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="VEHICLE_DATA_NOT_ALLOWED"/>
      <element name="VEHICLE_DATA_NOT_AVAILABLE"/>
      <element name="USER_DISALLOWED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>

    <param name="gps" type="GPSData" mandatory="false">
      <description>See GPSData</description>
      <description>Subscribable</description>
    </param>
    <param name="speed" type="Float" minvalue="-100" maxvalue="500" mandatory="false">
      <description>The vehicle speed in kilometers per hour</description>
      <description>Subscribable</description>
    </param>
    <param name="rpm" type="Integer" minvalue="0" maxvalue="20000" mandatory="false">
      <description>The number of revolutions per minute of the engine</description>
      <description>Subscribable</description>
    </param>
    <param name="fuelLevel" type="Float" minvalue="0" maxvalue="100" mandatory="false">
      <description>The fuel level</description>
    </param>
    <param name="avgFuelEconomy" type="Float" minvalue="0" maxvalue="7000" mandatory="false">
      <description>The average fuel economy in litres/100km</description>
    </param>
    <param name="batteryVoltage" type="Float" minvalue="0" maxvalue="26" mandatory="false">
      <description>The voltage in Volts</description>
    </param>
    <param name="externalTemperature" type="Float" minvalue="-40" maxvalue="100" mandatory="false">
      <description>The external temperature in degrees celsius.</description>
    </param>
    <param name="vin" type="String" maxlength="17" mandatory="false">
      <description>Vehicle identification number.</description>
    </param>
    <param name="prndl" type="PRNDL" mandatory="false">
      <description>See PRNDL.</description>
      <description>Subscribable</description>
      <issue creator="rs">Is this a good name? Wouldn't be selectedGear better?</issue>
    </param>
    <param name="tirePressure" type="TireStatus" mandatory="false">
      <description>See TireStatus.</description>
      <description>Subscribable</description>
    </param>
    <param name="batteryPackVoltage" type="Float" minvalue="-1000" maxvalue="1000" mandatory="false">
    	<description>Battery pack voltage of hybrid and electrical vehicles in volts</description>
    </param>
    <param name="batteryPackCurrent" type="Float" minvalue="-1000" maxvalue="1000" mandatory="false">
    	<description>Battery current of hybrid and electrical vehicles in amperes</description>
    </param>
    <param name="batteryPackTemperature" type="Integer" minvalue="-50" maxvalue="250" mandatory="false">
    	<description>Battery temperature of hybrid and electrical vehicles in degrees celsius</description>
    </param>
    <param name="engineTorque" type="Integer" minvalue="-10000" maxvalue="55000" mandatory="false">
    	<description>Engine torque in Nm</description>
      <description>Subscribable</description>
    </param>
    <param name="odometer" type="Integer" minvalue="0" maxvalue="2000000" mandatory="false">
    	<description>Odometer in km</description>
    </param>
    <param name="tripOdometer" type="Integer" minvalue="0" maxvalue="2000000" mandatory="false">
    	<description>Odometer of trip in km</description>
      	<issue creator="rs">This mixes up "Trip A" and "Total distance during this trip". Shall we seperate these two instead</issue>
    </param>
    <param name="satRadioESN" type="String" maxlength="500" mandatory="false">
      <description>The hexadecimal ESN of the satellite radio (if supported).</description>
    </param>

  </function>

  <function name="ReadDID" functionID="ReadDIDID" messagetype="request">
    <description>Non periodic vehicle data read request.</description>

    <param name="ecuName" type="Integer" minvalue="0" maxvalue="65535" mandatory="true">
      <description>Name of ECU.</description>
    </param>
    <param name="didLocation" type="Integer" minvalue="0" maxvalue="65535" minsize="0" maxsize="1000" array="true" mandatory="true">
      <description>Get raw data from vehicle data DID location(s).</description>
    </param>
    <param name="encrypted" type="Boolean" mandatory="false">
      <description>If not provided, the default is equal to False"</description>
      <description>Indicates if the DID data requested should be returned as encrypted through an OnEncodedSYNCPData response.</description>
      <description>If set to true, the data will return instead through OnEncodedSYNCPData and be passed through the proxy to the designated server URL.</description>
    </param>

  </function>

  <function name="ReadDID" functionID="ReadDIDID" messagetype="response">

    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="DISALLOWED"/>
      <element name="ENCRYPTED"/>
      <element name="USER_DISALLOWED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>

    <param name="dataResult" type="VehicleDataResultCode" minsize="0" maxsize="1000" array="true" mandatory="false">
      <description>Permission status of data element.</description>
    </param>

    <param name="data" type="String" maxlength="5000" minsize="0" maxsize="1000" array="true" mandatory="false">
      <description>Raw DID-based data returned for requested element.</description>
    </param>

  </function>

  <function name="GetDTCs" functionID="GetDTCsID" messagetype="request">
    <description>Vehicle module diagnostic trouble code request.</description>

    <param name="ecuName" type="Integer" minvalue="0" maxvalue="65535" mandatory="true">
      <description>Name of ECU.</description>
    </param>

    <param name="encrypted" type="Boolean" defvalue="false" mandatory="false">
      <description>If not provided, the default is equal to False"</description>
      <description>Indicates if the DTC data requested should be returned as encrypted through an OnEncodedSYNCPData response.</description>
      <description>If set to true, the data will return instead through OnEncodedSYNCPData and be passed through the proxy to the designated server URL.</description>
    </param>

  </function>

  <function name="GetDTCs" functionID="GetDTCsID" messagetype="response">

    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="DISALLOWED"/>
      <element name="USER_DISALLOWED"/>
      <element name="ENCRYPTED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>

    <param name="dtcList" type="DTC" mandatory="false" array="true" minsize="1" maxsize="100">
      <description>Array of all reported DTCs on module.</description>
    </param>

  </function>

  <function name="ScrollableMessage" functionID="ScrollableMessageID" messagetype="request">
    <description>Creates a full screen overlay containing a large block of formatted text that can be scrolled with up to 8 SoftButtons defined</description>
    <param name="scrollableMessageBody" type="String" maxlength="500">
      <description>Body of text that can include newlines and tabs.</description>
    </param>
    <param name="timeout" type="Integer" minvalue="0" maxvalue="65535" defvalue="30000" mandatory="false">
      <description>App defined timeout.</description>
    </param>
    <param name="softButtons" type="SoftButton" minsize="0" maxsize="8" array="true" mandatory="false">
      <description>App defined SoftButtons.</description>
      <description>If omitted on supported displays, only the system defined "Close" SoftButton will be displayed.</description>
    </param>
  </function>

  <function name="ScrollableMessage" functionID="ScrollableMessageID" messagetype="response">
    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>
    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <!--<element name="CHAR_LIMIT_EXCEEDED"/>-->
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="DISALLOWED"/>
      <element name="REJECTED"/>
      <element name="ABORTED"/>
    </param>
  </function>

  <function name="Slider" functionID="SliderID" messagetype="request">
    <description>Creates a full screen or pop-up overlay (depending on platform) with a single user controlled slider.</description>
    <param name="numTicks" type="Integer" minvalue="2" maxvalue="26" mandatory="true">
      <description>Number of selectable items on a horizontal axis</description>
    </param>
    <param name="position" type="Integer" minvalue="1" maxvalue="26" mandatory="true">
      <description>Initial position of slider control (cannot exceed numTicks)</description>
    </param>
    <param name="sliderHeader" type="String" maxlength="500" mandatory="true">
      <description>Text header to display</description>
    </param>
    <param name="sliderFooter" type="String" maxlength="500"  minsize="1" maxsize="26" array="true" mandatory="false">
      <description>Text footer to display (meant to display min/max threshold descriptors).</description>
      <description>For a static text footer, only one footer string shall be provided in the array.</description>
      <description>For a dynamic text footer, the number of footer text string in the array must match the numTicks value.</description>
      <description>For a dynamic text footer, text array string should correlate with potential slider position index.</description>
      <description>If omitted on supported displays, no footer text shall be displayed.</description>
    </param>
    <param name="timeout" type="Integer" minvalue="0" maxvalue="65535" defvalue="10000">
      <description>App defined timeout.</description>
    </param>
  </function>

  <function name="Slider" functionID="SliderID" messagetype="response">
      <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>
    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <!--<element name="SAVED"/>-->
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="DISALLOWED"/>
      <element name="REJECTED"/>
      <element name="ABORTED"/>
    </param>
    <param name="sliderPosition" type="Integer" minvalue="1" maxvalue="26">
      <description>Current slider value returned when saved or canceled</description>
    </param>
  </function>

  <function name="ShowConstantTBT" functionID="ShowConstantTBTID" messagetype="request">
    <param name="navigationText1" type="String" maxlength="500" mandatory="false">
    </param>
    <param name="navigationText2" type="String" maxlength="500" mandatory="false">
    </param>
    <param name="eta" type="String" maxlength="500" mandatory="false">
    </param>
    <param name="totalDistance" type="String" maxlength="500" mandatory="false">
    </param>
    <param name="turnIcon" type="Image">
    </param>
    <param name="distanceToManeuver" type="Float" minvalue="0" maxvalue="1000000000">
      <description>Distance till next maneuver (starting from) from previous maneuver.</description>
      <description>Used to calculate progress bar.</description>
    </param>
    <param name="distanceToManeuverScale" type="Float" minvalue="0" maxvalue="1000000000">
      <description>Fraction of distance till next maneuver (starting from when AlertManeuver is triggered).</description>
      <description>Used to calculate progress bar.</description>
    </param>
    <param name="maneuverComplete" type="Boolean" mandatory="false">
      <description>If and when a maneuver has completed while an AlertManeuver is active, the app must send this value set to TRUE in order to clear the AlertManeuver overlay.</description>
      <description>If omitted the value will be assumed as FALSE.</description>
    </param>
    <param name="softButtons" type="SoftButton" minsize="0" maxsize="3" array="true">
      <description>Three dynamic SoftButtons available (second SoftButton is fixed to "Turns").</description>
      <description>If omitted on supported displays, the currently displayed SoftButton values will not change.</description>
    </param>
  </function>

  <function name="ShowConstantTBT" functionID="ShowConstantTBTID" messagetype="response">
    <param name="success" type="Boolean" platform="documentation">
        <description>true, if successful</description>
        <description>false, if failed</description>
    </param>
    <param name="resultCode" type="Result" platform="documentation">
        <description>See Result</description>
        <element name="SUCCESS"/>
        <element name="INVALID_DATA"/>
        <element name="OUT_OF_MEMORY"/>
        <element name="TOO_MANY_PENDING_REQUESTS"/>
        <element name="APPLICATION_NOT_REGISTERED"/>
        <element name="GENERIC_ERROR"/>
        <element name="REJECTED"/>
        <element name="DISALLOWED"/>
    </param>
    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
        <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>

  <function name="AlertManeuver" functionID="AlertManeuverID" messagetype="request">
    <param name="ttsChunks" type="TTSChunk" minsize="1" maxsize="100" array="true">
        <description>An array of text chunks of type TTSChunk. See TTSChunk</description>
    </param>
    <param name="softButtons" type="SoftButton" minsize="0" maxsize="3" array="true">
      <description>If omitted on supported displays, only the system defined "Close" SoftButton shall be displayed.</description>
    </param>
  </function>

  <function name="AlertManeuver" functionID="AlertManeuverID" messagetype="response">
    <param name="success" type="Boolean" platform="documentation">
        <description>true, if successful</description>
        <description>false, if failed</description>
    </param>
    <param name="resultCode" type="Result" platform="documentation">
        <description>See Result</description>
        <element name="SUCCESS"/>
        <element name="INVALID_DATA"/>
        <element name="OUT_OF_MEMORY"/>
        <element name="TOO_MANY_PENDING_REQUESTS"/>
        <element name="APPLICATION_NOT_REGISTERED"/>
        <element name="GENERIC_ERROR"/>
        <element name="REJECTED"/>
        <element name="IGNORED"/>
        <element name="DISALLOWED"/>
        <element name="ABORTED"/>
    </param>
    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
        <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>

  <function name="UpdateTurnList" functionID="UpdateTurnListID" messagetype="request">
    <param name="turnList" type="Turn" minsize="1" maxsize="100" array="true">
    </param>
    <param name="softButtons" type="SoftButton" minsize="0" maxsize="1" array="true">
      <description>If omitted on supported displays, app-defined SoftButton will be left blank.</description>
    </param>
  </function>

  <function name="UpdateTurnList" functionID="UpdateTurnListID" messagetype="response">
    <param name="success" type="Boolean" platform="documentation">
        <description>true, if successful</description>
        <description>false, if failed</description>
    </param>
    <param name="resultCode" type="Result" platform="documentation">
        <description>See Result</description>
        <element name="SUCCESS"/>
        <element name="INVALID_DATA"/>
        <element name="OUT_OF_MEMORY"/>
        <element name="TOO_MANY_PENDING_REQUESTS"/>
        <element name="APPLICATION_NOT_REGISTERED"/>
        <element name="GENERIC_ERROR"/>
        <element name="REJECTED"/>
        <element name="DISALLOWED"/>
    </param>
    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
        <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>

  <function name="ChangeRegistration" functionID="ChangeRegistrationID" messagetype="request">
    <param name="language" type="Language" mandatory="true">
        <description>Requested SYNC voice engine (VR+TTS) language registration</description>
    </param>
    <param name="hmiDisplayLanguage" type="Language" mandatory="true">
      <description>Request display language registration</description>
    </param>
  </function>

  <function name="ChangeRegistration" functionID="ChangeRegistrationID" messagetype="response">

    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="DISALLOWED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>

  </function>

  <function name="GenericResponse" functionID="GenericResponseID" messagetype="response">
    <description>Generic Response is sent, when the name of a received msg cannot be retrieved. Only used in case of an error.</description>
	<description>Currently, only resultCode INVALID_DATA is used.</description>
   <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="INVALID_DATA"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>

<!--
  <function name="GetFile" messagetype="request">
    <param name="syncFileName" type="String" >
      <description>File source on sync.</description>
    </param>

  </function>
-->
<!--
  <function name="GetFile" messagetype="response">
    <description>Response is sent, when the file data was copied (success case). Or when an error occured.</description>

    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
      <element name="FILE_NOT_FOUND"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>
-->

  <function name="PutFile" functionID="PutFileID" messagetype="request" platform="gen2">
    <description>Used to push a binary data onto the SYNC module from a mobile device, such as icons and album art</description>
    <description>Not supported on first generation SYNC vehicles. </description>

    <param name="syncFileName" type="String" maxlength="500" mandatory="true">
      <description>File reference name.</description>
    </param>

    <param name="fileType" type="FileType">
      <description>Selected file type.</description>
    </param>

    <param name="persistentFile" type="Boolean" defvalue="false" mandatory="false">
      <description>Indicates if the file is meant to persist between sessions / ignition cycles.</description>
      <description>If set to TRUE, then the system will aim to persist this file through session / cycles.</description>
      <description>While files with this designation will have priority over others, they are subject to deletion by the system at any time.</description>
      <description>In the event of automatic deletion by the system, the app will receive a rejection and have to resend the file.</description>
      <description>If omitted, the value will be set to false.</description>
    </param>

    <param name="fileData" type="String" mandatory="false" >
      <description>Binary data.</description>
    </param>
  </function>

  <function name="PutFile" functionID="PutFileID" messagetype="response" platform="gen2">
    <description>Response is sent, when the file data was copied (success case). Or when an error occured.</description>
    <description>Not supported on First generation SYNC vehicles. </description>
   <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
    </param>

    <param name="spaceAvailable" type="Integer" minvalue="0" maxvalue="2000000000">
          <description>Provides the total local space available on SYNC for the registered app.</description>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>

    <function name="DeleteFile" functionID="DeleteFileID" messagetype="request" platform="gen2">
    <description>Used to delete a file resident on the SYNC module in the app's local cache.</description>
    <description>Not supported on first generation SYNC vehicles. </description>

    <param name="syncFileName" type="String" maxlength="500" mandatory="true">
      <description>File reference name.</description>
    </param>

  </function>

  <function name="DeleteFile" functionID="DeleteFileID" messagetype="response" platform="gen2">
    <description>Response is sent, when the file data was deleted (success case). Or when an error occured.</description>
    <description>Not supported on First generation SYNC vehicles. </description>
   <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
    </param>

    <param name="spaceAvailable" type="Integer" minvalue="0" maxvalue="2000000000">
          <description>Provides the total local space available on SYNC for the registered app.</description>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>

   <function name="ListFiles" functionID="ListFilesID" messagetype="request" platform="gen2">
    <description>Requests the current list of resident filenames for the registered app</description>
    <description>Not supported on first generation SYNC vehicles. </description>
  </function>

  <function name="ListFiles" functionID="ListFilesID" messagetype="response" platform="gen2">
    <description>Returns the current list of resident filenames for the registered app along with the current space available</description>
    <description>Not supported on First generation SYNC vehicles. </description>
   <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
    </param>

    <param name="filenames" type="String" maxlength="500" minsize="0" maxsize="1000" array="true" mandatory="false">
      <description>An array of all filenames resident on SYNC for the given registered app.</description>
      <description>If omitted, then no files currently reside on the system.</description>
    </param>

    <param name="spaceAvailable" type="Integer" minvalue="0" maxvalue="2000000000">
          <description>Provides the total local space available on SYNC for the registered app.</description>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>
  </function>

  <function name="SetAppIcon" functionID="SetAppIconID" messagetype="request" platform="gen2">
    <description>Used to set existing local file on SYNC as the app's icon</description>
    <description>Not supported on first generation SYNC vehicles. </description>

    <param name="syncFileName" type="String" maxlength="500" mandatory="true">
      <description>File reference name.</description>
    </param>

  </function>

  <function name="SetAppIcon" functionID="SetAppIconID" messagetype="response" platform="gen2">
    <description>Response is sent, when the file data was copied (success case). Or when an error occured.</description>
    <description>Not supported on First generation SYNC vehicles. </description>
    <description>Response is sent, when the file data was copied (success case). Or when an error occured.</description>
    <description>Not supported on First generation SYNC vehicles. </description>

    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>

  </function>

  <function name="SetDisplayLayout" functionID="SetDisplayLayoutID" messagetype="request" platform="gen2">
    <description>Used to set an alternate display layout.</description>
    <description>If not sent, default screen for given platform will be shown.</description>

    <param name="displayLayout" type="String" mandatory="true">
      <description>Predefined or dynamically created screen layout.</description>
      <description>Currently only predefined screen layouts are defined.</description>
      <description>Predefined layouts include:</description>
      <description>  "ONSCREEN_PRESETS"</description>
      <description>    Custom screen containing app-defined onscreen presets.  Currently defined for GEN2.</description>
    </param>

  </function>

  <function name="SetDisplayLayout" functionID="SetDisplayLayoutID" messagetype="response" platform="gen2">

    <param name="success" type="Boolean" platform="documentation">
		  <description>true, if successful</description>
		  <description>false, if failed</description>
	  </param>

    <param name="resultCode" type="Result" platform="documentation">
      <description>See Result</description>
      <element name="SUCCESS"/>
      <element name="INVALID_DATA"/>
      <element name="OUT_OF_MEMORY"/>
      <element name="TOO_MANY_PENDING_REQUESTS"/>
      <element name="APPLICATION_NOT_REGISTERED"/>
      <element name="GENERIC_ERROR"/>
      <element name="REJECTED"/>
    </param>

    <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
      <description>Provides additional human readable info regarding the result.</description>
    </param>

  </function>

  <!-- Notifications -->

  <function name="OnHMIStatus" functionID="OnHMIStatusID" messagetype="notification">
    <param name="hmiLevel" type="HMILevel">
      <description>See HMILevel</description>
    </param>

    <param name="audioStreamingState" type="AudioStreamingState">
      <description>See AudioStreamingState</description>
    </param>

    <param name="systemContext" type="SystemContext">
      <description>See SystemContext</description>
    </param>
  </function>

  <function name="OnAppInterfaceUnregistered" functionID="OnAppInterfaceUnregisteredID" messagetype="notification">
    <param name="reason" type="AppInterfaceUnregisteredReason">
      <description>See AppInterfaceUnregisteredReason</description>
    </param>
  </function>

  <function name="OnButtonEvent" functionID="OnButtonEventID" messagetype="notification">
    <description>Notifies application of UP/DOWN events for buttons to which the application is subscribed.</description>
    <param name="buttonName" type="ButtonName"/>
    <param name="buttonEventMode" type="ButtonEventMode">
      <description>Indicates whether this is an UP or DOWN event.</description>
    </param>
    <param name="customButtonID" type="Integer" minvalue="0" maxvalue="65536">
      <description>If ButtonName is “CUSTOM_BUTTON", this references the integer ID passed by a custom button. (e.g. softButton ID)</description>
    </param>
  </function>

  <function name="OnButtonPress" functionID="OnButtonPressID" messagetype="notification">
    <description>Notifies application of LONG/SHORT press events for buttons to which the application is subscribed.</description>
    <param name="buttonName" type="ButtonName"/>
    <param name="buttonPressMode" type="ButtonPressMode">
      <description>Indicates whether this is a LONG or SHORT button press event.</description>
    </param>
    <param name="customButtonID" type="Integer" minvalue="0" maxvalue="65536">
      <description>If ButtonName is “CUSTOM_BUTTON", this references the integer ID passed by a custom button. (e.g. softButton ID)</description>
    </param>
  </function>

  <function name="OnVehicleData" functionID="OnVehicleDataID" messagetype="notification">
    <description>Callback for the periodic and non periodic vehicle data read function.</description>
    <param name="gps" type="GPSData" mandatory="false">
      <description>See GPSData</description>
      <description>Subscribable</description>
    </param>
    <param name="speed" type="Float" minvalue="-100" maxvalue="500" mandatory="false">
      <description>The vehicle speed in kilometers per hour</description>
      <description>Subscribable</description>
    </param>
    <param name="rpm" type="Integer" minvalue="0" maxvalue="20000" mandatory="false">
      <description>The number of revolutions per minute of the engine</description>
      <description>Subscribable</description>
    </param>
    <param name="fuelLevel" type="Float" minvalue="0" maxvalue="100" mandatory="false">
      <description>The fuel level</description>
    </param>
    <param name="avgFuelEconomy" type="Float" minvalue="0" maxvalue="7000" mandatory="false">
      <description>The average fuel economy in litres/100km</description>
    </param>
    <param name="batteryVoltage" type="Float" minvalue="0" maxvalue="26" mandatory="false">
      <description>The voltage in Volts</description>
    </param>
    <param name="externalTemperature" type="Float" minvalue="-40" maxvalue="100" mandatory="false">
      <description>The external temperature in degrees celsius.</description>
    </param>
    <param name="vin" type="String" maxlength="17" mandatory="false">
      <description>Vehicle identification number.</description>
    </param>
    <param name="prndl" type="PRNDL" mandatory="false">
      <description>See PRNDL.</description>
      <description>Subscribable</description>
      <issue creator="rs">Is this a good name? Wouldn't be selectedGear better?</issue>
    </param>
    <param name="tirePressure" type="TireStatus" mandatory="false">
      <description>See TireStatus.</description>
      <description>Subscribable</description>
    </param>
    <param name="batteryPackVoltage" type="Float" minvalue="-1000" maxvalue="1000" mandatory="false">
    	<description>Battery pack voltage of hybrid and electrical vehicles in volts</description>
    </param>
    <param name="batteryPackCurrent" type="Float" minvalue="-1000" maxvalue="1000" mandatory="false">
    	<description>Battery current of hybrid and electrical vehicles in amperes</description>
    </param>
    <param name="batteryPackTemperature" type="Integer" minvalue="-50" maxvalue="250" mandatory="false">
    	<description>Battery temperature of hybrid and electrical vehicles in degrees celsius</description>
    </param>
    <param name="engineTorque" type="Integer" minvalue="-10000" maxvalue="55000" mandatory="false">
    	<description>Engine torque in Nm</description>
      <description>Subscribable</description>
    </param>
    <param name="odometer" type="Integer" minvalue="0" maxvalue="2000000" mandatory="false">
    	<description>Odometer in km</description>
    </param>
    <param name="tripOdometer" type="Integer" minvalue="0" maxvalue="2000000" mandatory="false">
    	<description>Odometer of trip in km</description>
      	<issue creator="rs">This mixes up "Trip A" and "Total distance during this trip". Shall we seperate these two instead</issue>
    </param>
    <param name="genericbinary" type="String" maxlength="500" mandatory="false">
      <description>The hex value string is a string of hexadecimal chars, for example "FE12" or "1234ABCD".</description>
     </param>
  </function>

  <function name="OnCommand" functionID="OnCommandID" messagetype="notification">
    <param name="cmdID" type="Integer" minvalue="0" maxvalue="2000000000">
      <description>Command ID, which is related to a specific menu entry.</description>
    </param>

    <param name="triggerSource" type="TriggerSource">
      <description>See TriggerSource</description>
    </param>
  </function>

  <function name="OnEncodedSyncPData" functionID="OnEncodedSyncPDataID" messagetype="notification">
    <description>Callback including encoded data of any SyncP packets that SYNC needs to send back to the mobile device.</description>
    <param name="data" type="String" maxlength="10000" minsize="1" maxsize="100" mandatory="true" array="true">
      <description>Contains base64 encoded string of SyncP packets.</description>
    </param>
    <param name="URL" type="String" maxlength="1000" mandatory="false">
      <description>If blank, the SyncP data shall be forwarded to the app.</description>
      <description>If not blank, the SyncP data shall be forwarded to the provided URL.</description>
    </param>
    <param name="Timeout" type="Integer" minvalue="-2000000000" maxvalue="2000000000" mandatory="false">
      <description>If blank, the SyncP data shall be forwarded to the app.</description>
      <description>If not blank, the SyncP data shall be forwarded with the provided timeout in seconds.</description>
    </param>
  </function>

  <function name="OnTBTClientState" functionID="OnTBTClientStateID" messagetype="notification" >
    <description>Provides applications with notifications specific to the current TBT client status on the module</description>
    <param name="state" type="TBTState">
      <description>Current State of TBT client</description>
    </param>
  </function>

  <function name="OnDriverDistraction" functionID="OnDriverDistractionID" messagetype="notification" >
    <description>Provides driver distraction state to mobile applications</description>
    <param name="state" type="DriverDistractionState">
      <description>Current State of Driver Distraction</description>
    </param>
  </function>

  <function name="OnPermissionsChange" functionID="OnPermissionsChangeID" messagetype="notification" >
    <description>Provides update to app of which policy-table-enabled functions are available</description>
    <param name="permissionItem" type="PermissionItem" minsize="1" maxsize="100" array="true">
      <description>Change in permissions for a given set of RPCs.</description>
    </param>
  </function>

  <function name="OnAudioPassThru" functionID="OnAudioPassThruID" messagetype="notification">
<!-- TODO: REMOVE
    <param name="audioPacket" type="DataType">
        <description>Binary packet of APT data.</description>
    </param>
-->
  </function>

  <function name="OnLanguageChange" functionID="OnLanguageChangeID" messagetype="notification">
    <param name="language" type="Language">
        <description>Current SYNC voice engine (VR+TTS) language</description>
    </param>
    <param name="hmiDisplayLanguage" type="Language">
      <description>Current display language</description>
    </param>
  </function>


  <struct name="HMIApplication">
                <description>Data type containing information about application needed by HMI.</description>
                <param name="appName" type="String" maxlength="100"/>
                <param name="ngnMediaScreenAppName" type="String" maxlength="100" mandatory="false"/>
                <param name="icon" type="String" mandatory="false"/>
        <param name="deviceName" type="String"/>
        <param name="vrSynonyms" type="String" array="true" minsize="1" maxsize="100" maxlength="40" mandatory="false"/>
        <param name="appId" type="Integer"/>
        <param name="languageDesired" type="Language"/>
        <param name="hmiDisplayLanguageDesired" type="Language"/>
        <param name="ttsName" type="TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false"/>
        <param name="isMediaApplication" type="Boolean"/>
        <param name="appType" type="AppType" minsize="1" maxsize="100" array="true" mandatory="false"/>
</struct>
<enum name="DeactivateReason">
  <description>Enum of reasons of user navigating from application used by HMI.</description>
  <element name="AUDIO">
      <description>Navigated to audio(radio, etc)</description>
  </element>
  <element name="PHONECALL">
      <description>Navigated to make a call.</description>
  </element>
  <element name="NAVIGATIONMAP">
      <description>Navigated to navigation screen.</description>
  </element>
  <element name="PHONEMENU">
      <description>Navigated to phone menu.</description>
  </element>
  <element name="SYNCSETTINGS">
      <description>Navigated to settings menu.</description>
  </element>
  <element name="GENERAL">
      <description>Other screens navigation apart from other mobile app.</description>
  </element>
</enum>

  </interface>
